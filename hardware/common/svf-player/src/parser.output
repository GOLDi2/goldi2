Terminals unused in grammar

    SVF_INSTRUCTION_PIO
    SVF_INSTRUCTION_PIOMAP


State 32 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: command
    2        | command program

    3 command: SVF_INSTRUCTION_ENDDR stable_state end
    4        | SVF_INSTRUCTION_ENDIR stable_state end
    5        | SVF_INSTRUCTION_FREQUENCY end
    6        | SVF_INSTRUCTION_FREQUENCY cycles end
    7        | SVF_INSTRUCTION_HDR common end
    8        | SVF_INSTRUCTION_HIR common end
    9        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk end
   10        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min end
   11        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min max end
   12        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk end_state end
   13        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min end_state end
   14        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min max end_state end
   15        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk end
   16        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min end
   17        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min max end
   18        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk end_state end
   19        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min end_state end
   20        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min max end_state end
   21        | SVF_INSTRUCTION_RUNTEST min end
   22        | SVF_INSTRUCTION_RUNTEST min max end
   23        | SVF_INSTRUCTION_RUNTEST min end_state end
   24        | SVF_INSTRUCTION_RUNTEST min max end_state end
   25        | SVF_INSTRUCTION_RUNTEST stable_state min end
   26        | SVF_INSTRUCTION_RUNTEST stable_state min max end
   27        | SVF_INSTRUCTION_RUNTEST stable_state min end_state end
   28        | SVF_INSTRUCTION_RUNTEST stable_state min max end_state end
   29        | SVF_INSTRUCTION_SDR SVF_UNSIGNED_INT end
   30        | SVF_INSTRUCTION_SDR common end
   31        | SVF_INSTRUCTION_SIR common end
   32        | SVF_INSTRUCTION_STATE stable_state end
   33        | SVF_INSTRUCTION_STATE statelist end
   34        | SVF_INSTRUCTION_TDR common end
   35        | SVF_INSTRUCTION_TIR common end
   36        | SVF_INSTRUCTION_TRST trst_mode end

   37 stable_state: SVF_STATE_RESET
   38             | SVF_STATE_IDLE
   39             | SVF_STATE_DRPAUSE
   40             | SVF_STATE_IRPAUSE

   41 state: SVF_STATE_RESET
   42      | SVF_STATE_IDLE
   43      | SVF_STATE_DRSELECT
   44      | SVF_STATE_DRCAPTURE
   45      | SVF_STATE_DRSHIFT
   46      | SVF_STATE_DREXIT1
   47      | SVF_STATE_DRPAUSE
   48      | SVF_STATE_DREXIT2
   49      | SVF_STATE_DRUPDATE
   50      | SVF_STATE_IRSELECT
   51      | SVF_STATE_IRCAPTURE
   52      | SVF_STATE_IRSHIFT
   53      | SVF_STATE_IREXIT1
   54      | SVF_STATE_IRPAUSE
   55      | SVF_STATE_IREXIT2
   56      | SVF_STATE_IRUPDATE

   57 end: SVF_INSTRUCTION_END

   58 tdi: SVF_TDI SVF_HEXSTRING

   59 tdo: SVF_TDO SVF_HEXSTRING

   60 mask: SVF_MASK SVF_HEXSTRING

   61 smask: SVF_SMASK SVF_HEXSTRING

   62 common: SVF_UNSIGNED_INT
   63       | SVF_UNSIGNED_INT tdi
   64       | SVF_UNSIGNED_INT tdi tdo
   65       | SVF_UNSIGNED_INT tdi mask
   66       | SVF_UNSIGNED_INT tdi smask
   67       | SVF_UNSIGNED_INT tdi tdo mask
   68       | SVF_UNSIGNED_INT tdi tdo smask
   69       | SVF_UNSIGNED_INT tdi mask smask
   70       | SVF_UNSIGNED_INT tdi tdo mask smask

   71 statelist: stable_state
   72          | state statelist

   73 cycles: SVF_REAL_NUMBER SVF_HZ

   74 run_clk: SVF_RUN_CLK_TCK
   75        | SVF_RUN_CLK_SCK

   76 min: SVF_REAL_NUMBER SVF_SEC

   77 max: SVF_MAXIMUM SVF_REAL_NUMBER SVF_SEC

   78 end_state: SVF_ENDSTATE stable_state

   79 trst_mode: SVF_TRST_MODE_ON
   80          | SVF_TRST_MODE_OFF
   81          | SVF_TRST_MODE_Z
   82          | SVF_TRST_MODE_ABSENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SVF_INSTRUCTION_ENDDR <u> (258) 3
    SVF_INSTRUCTION_ENDIR <u> (259) 4
    SVF_INSTRUCTION_FREQUENCY <u> (260) 5 6
    SVF_INSTRUCTION_HDR <u> (261) 7
    SVF_INSTRUCTION_HIR <u> (262) 8
    SVF_INSTRUCTION_PIO <u> (263)
    SVF_INSTRUCTION_PIOMAP <u> (264)
    SVF_INSTRUCTION_RUNTEST <u> (265) 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
    SVF_INSTRUCTION_SDR <u> (266) 29 30
    SVF_INSTRUCTION_SIR <u> (267) 31
    SVF_INSTRUCTION_STATE <u> (268) 32 33
    SVF_INSTRUCTION_TDR <u> (269) 34
    SVF_INSTRUCTION_TIR <u> (270) 35
    SVF_INSTRUCTION_TRST <u> (271) 36
    SVF_STATE_RESET <u> (272) 37 41
    SVF_STATE_IDLE <u> (273) 38 42
    SVF_STATE_DRSELECT <u> (274) 43
    SVF_STATE_DRCAPTURE <u> (275) 44
    SVF_STATE_DRSHIFT <u> (276) 45
    SVF_STATE_DREXIT1 <u> (277) 46
    SVF_STATE_DRPAUSE <u> (278) 39 47
    SVF_STATE_DREXIT2 <u> (279) 48
    SVF_STATE_DRUPDATE <u> (280) 49
    SVF_STATE_IRSELECT <u> (281) 50
    SVF_STATE_IRCAPTURE <u> (282) 51
    SVF_STATE_IRSHIFT <u> (283) 52
    SVF_STATE_IREXIT1 <u> (284) 53
    SVF_STATE_IRPAUSE <u> (285) 40 54
    SVF_STATE_IREXIT2 <u> (286) 55
    SVF_STATE_IRUPDATE <u> (287) 56
    SVF_REAL_NUMBER <d> (288) 73 76 77
    SVF_UNSIGNED_INT <u> (289) 9 10 11 12 13 14 15 16 17 18 19 20 29 62 63 64 65 66 67 68 69 70
    SVF_HEXSTRING <string> (290) 58 59 60 61
    SVF_RUN_CLK_TCK <u> (291) 74
    SVF_RUN_CLK_SCK <u> (292) 75
    SVF_TRST_MODE_ON <u> (293) 79
    SVF_TRST_MODE_OFF <u> (294) 80
    SVF_TRST_MODE_Z <u> (295) 81
    SVF_TRST_MODE_ABSENT <u> (296) 82
    SVF_HZ <string> (297) 73
    SVF_MAXIMUM <string> (298) 77
    SVF_SEC <string> (299) 76 77
    SVF_ENDSTATE <string> (300) 78
    SVF_TDI <string> (301) 58
    SVF_TDO <string> (302) 59
    SVF_MASK <string> (303) 60
    SVF_SMASK <string> (304) 61
    SVF_INSTRUCTION_END <string> (305) 57


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1 2
        on right: 0 2
    command (53)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 1 2
    stable_state <u> (54)
        on left: 37 38 39 40
        on right: 3 4 15 16 17 18 19 20 25 26 27 28 32 71 78
    state <u> (55)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 72
    end (56)
        on left: 57
        on right: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    tdi <string> (57)
        on left: 58
        on right: 63 64 65 66 67 68 69 70
    tdo <string> (58)
        on left: 59
        on right: 64 67 68 70
    mask <string> (59)
        on left: 60
        on right: 65 67 69 70
    smask <string> (60)
        on left: 61
        on right: 66 68 69 70
    common <shift_data> (61)
        on left: 62 63 64 65 66 67 68 69 70
        on right: 7 8 30 31 34 35
    statelist <list> (62)
        on left: 71 72
        on right: 33 72
    cycles <d> (63)
        on left: 73
        on right: 6
    run_clk <u> (64)
        on left: 74 75
        on right: 9 10 11 12 13 14 15 16 17 18 19 20
    min <d> (65)
        on left: 76
        on right: 10 11 13 14 16 17 19 20 21 22 23 24 25 26 27 28
    max <d> (66)
        on left: 77
        on right: 11 14 17 20 22 24 26 28
    end_state <u> (67)
        on left: 78
        on right: 12 13 14 18 19 20 23 24 27 28
    trst_mode <u> (68)
        on left: 79 80 81 82
        on right: 36


State 0

    0 $accept: . program $end

    SVF_INSTRUCTION_ENDDR      shift, and go to state 1
    SVF_INSTRUCTION_ENDIR      shift, and go to state 2
    SVF_INSTRUCTION_FREQUENCY  shift, and go to state 3
    SVF_INSTRUCTION_HDR        shift, and go to state 4
    SVF_INSTRUCTION_HIR        shift, and go to state 5
    SVF_INSTRUCTION_RUNTEST    shift, and go to state 6
    SVF_INSTRUCTION_SDR        shift, and go to state 7
    SVF_INSTRUCTION_SIR        shift, and go to state 8
    SVF_INSTRUCTION_STATE      shift, and go to state 9
    SVF_INSTRUCTION_TDR        shift, and go to state 10
    SVF_INSTRUCTION_TIR        shift, and go to state 11
    SVF_INSTRUCTION_TRST       shift, and go to state 12

    program  go to state 13
    command  go to state 14


State 1

    3 command: SVF_INSTRUCTION_ENDDR . stable_state end

    SVF_STATE_RESET    shift, and go to state 15
    SVF_STATE_IDLE     shift, and go to state 16
    SVF_STATE_DRPAUSE  shift, and go to state 17
    SVF_STATE_IRPAUSE  shift, and go to state 18

    stable_state  go to state 19


State 2

    4 command: SVF_INSTRUCTION_ENDIR . stable_state end

    SVF_STATE_RESET    shift, and go to state 15
    SVF_STATE_IDLE     shift, and go to state 16
    SVF_STATE_DRPAUSE  shift, and go to state 17
    SVF_STATE_IRPAUSE  shift, and go to state 18

    stable_state  go to state 20


State 3

    5 command: SVF_INSTRUCTION_FREQUENCY . end
    6        | SVF_INSTRUCTION_FREQUENCY . cycles end

    SVF_REAL_NUMBER      shift, and go to state 21
    SVF_INSTRUCTION_END  shift, and go to state 22

    end     go to state 23
    cycles  go to state 24


State 4

    7 command: SVF_INSTRUCTION_HDR . common end

    SVF_UNSIGNED_INT  shift, and go to state 25

    common  go to state 26


State 5

    8 command: SVF_INSTRUCTION_HIR . common end

    SVF_UNSIGNED_INT  shift, and go to state 25

    common  go to state 27


State 6

    9 command: SVF_INSTRUCTION_RUNTEST . SVF_UNSIGNED_INT run_clk end
   10        | SVF_INSTRUCTION_RUNTEST . SVF_UNSIGNED_INT run_clk min end
   11        | SVF_INSTRUCTION_RUNTEST . SVF_UNSIGNED_INT run_clk min max end
   12        | SVF_INSTRUCTION_RUNTEST . SVF_UNSIGNED_INT run_clk end_state end
   13        | SVF_INSTRUCTION_RUNTEST . SVF_UNSIGNED_INT run_clk min end_state end
   14        | SVF_INSTRUCTION_RUNTEST . SVF_UNSIGNED_INT run_clk min max end_state end
   15        | SVF_INSTRUCTION_RUNTEST . stable_state SVF_UNSIGNED_INT run_clk end
   16        | SVF_INSTRUCTION_RUNTEST . stable_state SVF_UNSIGNED_INT run_clk min end
   17        | SVF_INSTRUCTION_RUNTEST . stable_state SVF_UNSIGNED_INT run_clk min max end
   18        | SVF_INSTRUCTION_RUNTEST . stable_state SVF_UNSIGNED_INT run_clk end_state end
   19        | SVF_INSTRUCTION_RUNTEST . stable_state SVF_UNSIGNED_INT run_clk min end_state end
   20        | SVF_INSTRUCTION_RUNTEST . stable_state SVF_UNSIGNED_INT run_clk min max end_state end
   21        | SVF_INSTRUCTION_RUNTEST . min end
   22        | SVF_INSTRUCTION_RUNTEST . min max end
   23        | SVF_INSTRUCTION_RUNTEST . min end_state end
   24        | SVF_INSTRUCTION_RUNTEST . min max end_state end
   25        | SVF_INSTRUCTION_RUNTEST . stable_state min end
   26        | SVF_INSTRUCTION_RUNTEST . stable_state min max end
   27        | SVF_INSTRUCTION_RUNTEST . stable_state min end_state end
   28        | SVF_INSTRUCTION_RUNTEST . stable_state min max end_state end

    SVF_STATE_RESET    shift, and go to state 15
    SVF_STATE_IDLE     shift, and go to state 16
    SVF_STATE_DRPAUSE  shift, and go to state 17
    SVF_STATE_IRPAUSE  shift, and go to state 18
    SVF_REAL_NUMBER    shift, and go to state 28
    SVF_UNSIGNED_INT   shift, and go to state 29

    stable_state  go to state 30
    min           go to state 31


State 7

   29 command: SVF_INSTRUCTION_SDR . SVF_UNSIGNED_INT end
   30        | SVF_INSTRUCTION_SDR . common end

    SVF_UNSIGNED_INT  shift, and go to state 32

    common  go to state 33


State 8

   31 command: SVF_INSTRUCTION_SIR . common end

    SVF_UNSIGNED_INT  shift, and go to state 25

    common  go to state 34


State 9

   32 command: SVF_INSTRUCTION_STATE . stable_state end
   33        | SVF_INSTRUCTION_STATE . statelist end

    SVF_STATE_RESET      shift, and go to state 35
    SVF_STATE_IDLE       shift, and go to state 36
    SVF_STATE_DRSELECT   shift, and go to state 37
    SVF_STATE_DRCAPTURE  shift, and go to state 38
    SVF_STATE_DRSHIFT    shift, and go to state 39
    SVF_STATE_DREXIT1    shift, and go to state 40
    SVF_STATE_DRPAUSE    shift, and go to state 41
    SVF_STATE_DREXIT2    shift, and go to state 42
    SVF_STATE_DRUPDATE   shift, and go to state 43
    SVF_STATE_IRSELECT   shift, and go to state 44
    SVF_STATE_IRCAPTURE  shift, and go to state 45
    SVF_STATE_IRSHIFT    shift, and go to state 46
    SVF_STATE_IREXIT1    shift, and go to state 47
    SVF_STATE_IRPAUSE    shift, and go to state 48
    SVF_STATE_IREXIT2    shift, and go to state 49
    SVF_STATE_IRUPDATE   shift, and go to state 50

    stable_state  go to state 51
    state         go to state 52
    statelist     go to state 53


State 10

   34 command: SVF_INSTRUCTION_TDR . common end

    SVF_UNSIGNED_INT  shift, and go to state 25

    common  go to state 54


State 11

   35 command: SVF_INSTRUCTION_TIR . common end

    SVF_UNSIGNED_INT  shift, and go to state 25

    common  go to state 55


State 12

   36 command: SVF_INSTRUCTION_TRST . trst_mode end

    SVF_TRST_MODE_ON      shift, and go to state 56
    SVF_TRST_MODE_OFF     shift, and go to state 57
    SVF_TRST_MODE_Z       shift, and go to state 58
    SVF_TRST_MODE_ABSENT  shift, and go to state 59

    trst_mode  go to state 60


State 13

    0 $accept: program . $end

    $end  shift, and go to state 61


State 14

    1 program: command .
    2        | command . program

    SVF_INSTRUCTION_ENDDR      shift, and go to state 1
    SVF_INSTRUCTION_ENDIR      shift, and go to state 2
    SVF_INSTRUCTION_FREQUENCY  shift, and go to state 3
    SVF_INSTRUCTION_HDR        shift, and go to state 4
    SVF_INSTRUCTION_HIR        shift, and go to state 5
    SVF_INSTRUCTION_RUNTEST    shift, and go to state 6
    SVF_INSTRUCTION_SDR        shift, and go to state 7
    SVF_INSTRUCTION_SIR        shift, and go to state 8
    SVF_INSTRUCTION_STATE      shift, and go to state 9
    SVF_INSTRUCTION_TDR        shift, and go to state 10
    SVF_INSTRUCTION_TIR        shift, and go to state 11
    SVF_INSTRUCTION_TRST       shift, and go to state 12

    $default  reduce using rule 1 (program)

    program  go to state 62
    command  go to state 14


State 15

   37 stable_state: SVF_STATE_RESET .

    $default  reduce using rule 37 (stable_state)


State 16

   38 stable_state: SVF_STATE_IDLE .

    $default  reduce using rule 38 (stable_state)


State 17

   39 stable_state: SVF_STATE_DRPAUSE .

    $default  reduce using rule 39 (stable_state)


State 18

   40 stable_state: SVF_STATE_IRPAUSE .

    $default  reduce using rule 40 (stable_state)


State 19

    3 command: SVF_INSTRUCTION_ENDDR stable_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 63


State 20

    4 command: SVF_INSTRUCTION_ENDIR stable_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 64


State 21

   73 cycles: SVF_REAL_NUMBER . SVF_HZ

    SVF_HZ  shift, and go to state 65


State 22

   57 end: SVF_INSTRUCTION_END .

    $default  reduce using rule 57 (end)


State 23

    5 command: SVF_INSTRUCTION_FREQUENCY end .

    $default  reduce using rule 5 (command)


State 24

    6 command: SVF_INSTRUCTION_FREQUENCY cycles . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 66


State 25

   62 common: SVF_UNSIGNED_INT .
   63       | SVF_UNSIGNED_INT . tdi
   64       | SVF_UNSIGNED_INT . tdi tdo
   65       | SVF_UNSIGNED_INT . tdi mask
   66       | SVF_UNSIGNED_INT . tdi smask
   67       | SVF_UNSIGNED_INT . tdi tdo mask
   68       | SVF_UNSIGNED_INT . tdi tdo smask
   69       | SVF_UNSIGNED_INT . tdi mask smask
   70       | SVF_UNSIGNED_INT . tdi tdo mask smask

    SVF_TDI  shift, and go to state 67

    $default  reduce using rule 62 (common)

    tdi  go to state 68


State 26

    7 command: SVF_INSTRUCTION_HDR common . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 69


State 27

    8 command: SVF_INSTRUCTION_HIR common . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 70


State 28

   76 min: SVF_REAL_NUMBER . SVF_SEC

    SVF_SEC  shift, and go to state 71


State 29

    9 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT . run_clk end
   10        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT . run_clk min end
   11        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT . run_clk min max end
   12        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT . run_clk end_state end
   13        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT . run_clk min end_state end
   14        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT . run_clk min max end_state end

    SVF_RUN_CLK_TCK  shift, and go to state 72
    SVF_RUN_CLK_SCK  shift, and go to state 73

    run_clk  go to state 74


State 30

   15 command: SVF_INSTRUCTION_RUNTEST stable_state . SVF_UNSIGNED_INT run_clk end
   16        | SVF_INSTRUCTION_RUNTEST stable_state . SVF_UNSIGNED_INT run_clk min end
   17        | SVF_INSTRUCTION_RUNTEST stable_state . SVF_UNSIGNED_INT run_clk min max end
   18        | SVF_INSTRUCTION_RUNTEST stable_state . SVF_UNSIGNED_INT run_clk end_state end
   19        | SVF_INSTRUCTION_RUNTEST stable_state . SVF_UNSIGNED_INT run_clk min end_state end
   20        | SVF_INSTRUCTION_RUNTEST stable_state . SVF_UNSIGNED_INT run_clk min max end_state end
   25        | SVF_INSTRUCTION_RUNTEST stable_state . min end
   26        | SVF_INSTRUCTION_RUNTEST stable_state . min max end
   27        | SVF_INSTRUCTION_RUNTEST stable_state . min end_state end
   28        | SVF_INSTRUCTION_RUNTEST stable_state . min max end_state end

    SVF_REAL_NUMBER   shift, and go to state 28
    SVF_UNSIGNED_INT  shift, and go to state 75

    min  go to state 76


State 31

   21 command: SVF_INSTRUCTION_RUNTEST min . end
   22        | SVF_INSTRUCTION_RUNTEST min . max end
   23        | SVF_INSTRUCTION_RUNTEST min . end_state end
   24        | SVF_INSTRUCTION_RUNTEST min . max end_state end

    SVF_MAXIMUM          shift, and go to state 77
    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 79
    max        go to state 80
    end_state  go to state 81


State 32

   29 command: SVF_INSTRUCTION_SDR SVF_UNSIGNED_INT . end
   62 common: SVF_UNSIGNED_INT .
   63       | SVF_UNSIGNED_INT . tdi
   64       | SVF_UNSIGNED_INT . tdi tdo
   65       | SVF_UNSIGNED_INT . tdi mask
   66       | SVF_UNSIGNED_INT . tdi smask
   67       | SVF_UNSIGNED_INT . tdi tdo mask
   68       | SVF_UNSIGNED_INT . tdi tdo smask
   69       | SVF_UNSIGNED_INT . tdi mask smask
   70       | SVF_UNSIGNED_INT . tdi tdo mask smask

    SVF_TDI              shift, and go to state 67
    SVF_INSTRUCTION_END  shift, and go to state 22

    SVF_INSTRUCTION_END  [reduce using rule 62 (common)]

    end  go to state 82
    tdi  go to state 68


State 33

   30 command: SVF_INSTRUCTION_SDR common . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 83


State 34

   31 command: SVF_INSTRUCTION_SIR common . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 84


State 35

   37 stable_state: SVF_STATE_RESET .
   41 state: SVF_STATE_RESET .

    SVF_INSTRUCTION_END  reduce using rule 37 (stable_state)
    $default             reduce using rule 41 (state)


State 36

   38 stable_state: SVF_STATE_IDLE .
   42 state: SVF_STATE_IDLE .

    SVF_INSTRUCTION_END  reduce using rule 38 (stable_state)
    $default             reduce using rule 42 (state)


State 37

   43 state: SVF_STATE_DRSELECT .

    $default  reduce using rule 43 (state)


State 38

   44 state: SVF_STATE_DRCAPTURE .

    $default  reduce using rule 44 (state)


State 39

   45 state: SVF_STATE_DRSHIFT .

    $default  reduce using rule 45 (state)


State 40

   46 state: SVF_STATE_DREXIT1 .

    $default  reduce using rule 46 (state)


State 41

   39 stable_state: SVF_STATE_DRPAUSE .
   47 state: SVF_STATE_DRPAUSE .

    SVF_INSTRUCTION_END  reduce using rule 39 (stable_state)
    $default             reduce using rule 47 (state)


State 42

   48 state: SVF_STATE_DREXIT2 .

    $default  reduce using rule 48 (state)


State 43

   49 state: SVF_STATE_DRUPDATE .

    $default  reduce using rule 49 (state)


State 44

   50 state: SVF_STATE_IRSELECT .

    $default  reduce using rule 50 (state)


State 45

   51 state: SVF_STATE_IRCAPTURE .

    $default  reduce using rule 51 (state)


State 46

   52 state: SVF_STATE_IRSHIFT .

    $default  reduce using rule 52 (state)


State 47

   53 state: SVF_STATE_IREXIT1 .

    $default  reduce using rule 53 (state)


State 48

   40 stable_state: SVF_STATE_IRPAUSE .
   54 state: SVF_STATE_IRPAUSE .

    SVF_INSTRUCTION_END  reduce using rule 40 (stable_state)
    $default             reduce using rule 54 (state)


State 49

   55 state: SVF_STATE_IREXIT2 .

    $default  reduce using rule 55 (state)


State 50

   56 state: SVF_STATE_IRUPDATE .

    $default  reduce using rule 56 (state)


State 51

   32 command: SVF_INSTRUCTION_STATE stable_state . end
   71 statelist: stable_state .

    SVF_INSTRUCTION_END  shift, and go to state 22

    SVF_INSTRUCTION_END  [reduce using rule 71 (statelist)]

    end  go to state 85


State 52

   72 statelist: state . statelist

    SVF_STATE_RESET      shift, and go to state 35
    SVF_STATE_IDLE       shift, and go to state 36
    SVF_STATE_DRSELECT   shift, and go to state 37
    SVF_STATE_DRCAPTURE  shift, and go to state 38
    SVF_STATE_DRSHIFT    shift, and go to state 39
    SVF_STATE_DREXIT1    shift, and go to state 40
    SVF_STATE_DRPAUSE    shift, and go to state 41
    SVF_STATE_DREXIT2    shift, and go to state 42
    SVF_STATE_DRUPDATE   shift, and go to state 43
    SVF_STATE_IRSELECT   shift, and go to state 44
    SVF_STATE_IRCAPTURE  shift, and go to state 45
    SVF_STATE_IRSHIFT    shift, and go to state 46
    SVF_STATE_IREXIT1    shift, and go to state 47
    SVF_STATE_IRPAUSE    shift, and go to state 48
    SVF_STATE_IREXIT2    shift, and go to state 49
    SVF_STATE_IRUPDATE   shift, and go to state 50

    stable_state  go to state 86
    state         go to state 52
    statelist     go to state 87


State 53

   33 command: SVF_INSTRUCTION_STATE statelist . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 88


State 54

   34 command: SVF_INSTRUCTION_TDR common . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 89


State 55

   35 command: SVF_INSTRUCTION_TIR common . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 90


State 56

   79 trst_mode: SVF_TRST_MODE_ON .

    $default  reduce using rule 79 (trst_mode)


State 57

   80 trst_mode: SVF_TRST_MODE_OFF .

    $default  reduce using rule 80 (trst_mode)


State 58

   81 trst_mode: SVF_TRST_MODE_Z .

    $default  reduce using rule 81 (trst_mode)


State 59

   82 trst_mode: SVF_TRST_MODE_ABSENT .

    $default  reduce using rule 82 (trst_mode)


State 60

   36 command: SVF_INSTRUCTION_TRST trst_mode . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 91


State 61

    0 $accept: program $end .

    $default  accept


State 62

    2 program: command program .

    $default  reduce using rule 2 (program)


State 63

    3 command: SVF_INSTRUCTION_ENDDR stable_state end .

    $default  reduce using rule 3 (command)


State 64

    4 command: SVF_INSTRUCTION_ENDIR stable_state end .

    $default  reduce using rule 4 (command)


State 65

   73 cycles: SVF_REAL_NUMBER SVF_HZ .

    $default  reduce using rule 73 (cycles)


State 66

    6 command: SVF_INSTRUCTION_FREQUENCY cycles end .

    $default  reduce using rule 6 (command)


State 67

   58 tdi: SVF_TDI . SVF_HEXSTRING

    SVF_HEXSTRING  shift, and go to state 92


State 68

   63 common: SVF_UNSIGNED_INT tdi .
   64       | SVF_UNSIGNED_INT tdi . tdo
   65       | SVF_UNSIGNED_INT tdi . mask
   66       | SVF_UNSIGNED_INT tdi . smask
   67       | SVF_UNSIGNED_INT tdi . tdo mask
   68       | SVF_UNSIGNED_INT tdi . tdo smask
   69       | SVF_UNSIGNED_INT tdi . mask smask
   70       | SVF_UNSIGNED_INT tdi . tdo mask smask

    SVF_TDO    shift, and go to state 93
    SVF_MASK   shift, and go to state 94
    SVF_SMASK  shift, and go to state 95

    $default  reduce using rule 63 (common)

    tdo    go to state 96
    mask   go to state 97
    smask  go to state 98


State 69

    7 command: SVF_INSTRUCTION_HDR common end .

    $default  reduce using rule 7 (command)


State 70

    8 command: SVF_INSTRUCTION_HIR common end .

    $default  reduce using rule 8 (command)


State 71

   76 min: SVF_REAL_NUMBER SVF_SEC .

    $default  reduce using rule 76 (min)


State 72

   74 run_clk: SVF_RUN_CLK_TCK .

    $default  reduce using rule 74 (run_clk)


State 73

   75 run_clk: SVF_RUN_CLK_SCK .

    $default  reduce using rule 75 (run_clk)


State 74

    9 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk . end
   10        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk . min end
   11        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk . min max end
   12        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk . end_state end
   13        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk . min end_state end
   14        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk . min max end_state end

    SVF_REAL_NUMBER      shift, and go to state 28
    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 99
    min        go to state 100
    end_state  go to state 101


State 75

   15 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT . run_clk end
   16        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT . run_clk min end
   17        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT . run_clk min max end
   18        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT . run_clk end_state end
   19        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT . run_clk min end_state end
   20        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT . run_clk min max end_state end

    SVF_RUN_CLK_TCK  shift, and go to state 72
    SVF_RUN_CLK_SCK  shift, and go to state 73

    run_clk  go to state 102


State 76

   25 command: SVF_INSTRUCTION_RUNTEST stable_state min . end
   26        | SVF_INSTRUCTION_RUNTEST stable_state min . max end
   27        | SVF_INSTRUCTION_RUNTEST stable_state min . end_state end
   28        | SVF_INSTRUCTION_RUNTEST stable_state min . max end_state end

    SVF_MAXIMUM          shift, and go to state 77
    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 103
    max        go to state 104
    end_state  go to state 105


State 77

   77 max: SVF_MAXIMUM . SVF_REAL_NUMBER SVF_SEC

    SVF_REAL_NUMBER  shift, and go to state 106


State 78

   78 end_state: SVF_ENDSTATE . stable_state

    SVF_STATE_RESET    shift, and go to state 15
    SVF_STATE_IDLE     shift, and go to state 16
    SVF_STATE_DRPAUSE  shift, and go to state 17
    SVF_STATE_IRPAUSE  shift, and go to state 18

    stable_state  go to state 107


State 79

   21 command: SVF_INSTRUCTION_RUNTEST min end .

    $default  reduce using rule 21 (command)


State 80

   22 command: SVF_INSTRUCTION_RUNTEST min max . end
   24        | SVF_INSTRUCTION_RUNTEST min max . end_state end

    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 108
    end_state  go to state 109


State 81

   23 command: SVF_INSTRUCTION_RUNTEST min end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 110


State 82

   29 command: SVF_INSTRUCTION_SDR SVF_UNSIGNED_INT end .

    $default  reduce using rule 29 (command)


State 83

   30 command: SVF_INSTRUCTION_SDR common end .

    $default  reduce using rule 30 (command)


State 84

   31 command: SVF_INSTRUCTION_SIR common end .

    $default  reduce using rule 31 (command)


State 85

   32 command: SVF_INSTRUCTION_STATE stable_state end .

    $default  reduce using rule 32 (command)


State 86

   71 statelist: stable_state .

    $default  reduce using rule 71 (statelist)


State 87

   72 statelist: state statelist .

    $default  reduce using rule 72 (statelist)


State 88

   33 command: SVF_INSTRUCTION_STATE statelist end .

    $default  reduce using rule 33 (command)


State 89

   34 command: SVF_INSTRUCTION_TDR common end .

    $default  reduce using rule 34 (command)


State 90

   35 command: SVF_INSTRUCTION_TIR common end .

    $default  reduce using rule 35 (command)


State 91

   36 command: SVF_INSTRUCTION_TRST trst_mode end .

    $default  reduce using rule 36 (command)


State 92

   58 tdi: SVF_TDI SVF_HEXSTRING .

    $default  reduce using rule 58 (tdi)


State 93

   59 tdo: SVF_TDO . SVF_HEXSTRING

    SVF_HEXSTRING  shift, and go to state 111


State 94

   60 mask: SVF_MASK . SVF_HEXSTRING

    SVF_HEXSTRING  shift, and go to state 112


State 95

   61 smask: SVF_SMASK . SVF_HEXSTRING

    SVF_HEXSTRING  shift, and go to state 113


State 96

   64 common: SVF_UNSIGNED_INT tdi tdo .
   67       | SVF_UNSIGNED_INT tdi tdo . mask
   68       | SVF_UNSIGNED_INT tdi tdo . smask
   70       | SVF_UNSIGNED_INT tdi tdo . mask smask

    SVF_MASK   shift, and go to state 94
    SVF_SMASK  shift, and go to state 95

    $default  reduce using rule 64 (common)

    mask   go to state 114
    smask  go to state 115


State 97

   65 common: SVF_UNSIGNED_INT tdi mask .
   69       | SVF_UNSIGNED_INT tdi mask . smask

    SVF_SMASK  shift, and go to state 95

    $default  reduce using rule 65 (common)

    smask  go to state 116


State 98

   66 common: SVF_UNSIGNED_INT tdi smask .

    $default  reduce using rule 66 (common)


State 99

    9 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk end .

    $default  reduce using rule 9 (command)


State 100

   10 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min . end
   11        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min . max end
   13        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min . end_state end
   14        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min . max end_state end

    SVF_MAXIMUM          shift, and go to state 77
    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 117
    max        go to state 118
    end_state  go to state 119


State 101

   12 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 120


State 102

   15 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk . end
   16        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk . min end
   17        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk . min max end
   18        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk . end_state end
   19        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk . min end_state end
   20        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk . min max end_state end

    SVF_REAL_NUMBER      shift, and go to state 28
    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 121
    min        go to state 122
    end_state  go to state 123


State 103

   25 command: SVF_INSTRUCTION_RUNTEST stable_state min end .

    $default  reduce using rule 25 (command)


State 104

   26 command: SVF_INSTRUCTION_RUNTEST stable_state min max . end
   28        | SVF_INSTRUCTION_RUNTEST stable_state min max . end_state end

    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 124
    end_state  go to state 125


State 105

   27 command: SVF_INSTRUCTION_RUNTEST stable_state min end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 126


State 106

   77 max: SVF_MAXIMUM SVF_REAL_NUMBER . SVF_SEC

    SVF_SEC  shift, and go to state 127


State 107

   78 end_state: SVF_ENDSTATE stable_state .

    $default  reduce using rule 78 (end_state)


State 108

   22 command: SVF_INSTRUCTION_RUNTEST min max end .

    $default  reduce using rule 22 (command)


State 109

   24 command: SVF_INSTRUCTION_RUNTEST min max end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 128


State 110

   23 command: SVF_INSTRUCTION_RUNTEST min end_state end .

    $default  reduce using rule 23 (command)


State 111

   59 tdo: SVF_TDO SVF_HEXSTRING .

    $default  reduce using rule 59 (tdo)


State 112

   60 mask: SVF_MASK SVF_HEXSTRING .

    $default  reduce using rule 60 (mask)


State 113

   61 smask: SVF_SMASK SVF_HEXSTRING .

    $default  reduce using rule 61 (smask)


State 114

   67 common: SVF_UNSIGNED_INT tdi tdo mask .
   70       | SVF_UNSIGNED_INT tdi tdo mask . smask

    SVF_SMASK  shift, and go to state 95

    $default  reduce using rule 67 (common)

    smask  go to state 129


State 115

   68 common: SVF_UNSIGNED_INT tdi tdo smask .

    $default  reduce using rule 68 (common)


State 116

   69 common: SVF_UNSIGNED_INT tdi mask smask .

    $default  reduce using rule 69 (common)


State 117

   10 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min end .

    $default  reduce using rule 10 (command)


State 118

   11 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min max . end
   14        | SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min max . end_state end

    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 130
    end_state  go to state 131


State 119

   13 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 132


State 120

   12 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk end_state end .

    $default  reduce using rule 12 (command)


State 121

   15 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk end .

    $default  reduce using rule 15 (command)


State 122

   16 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min . end
   17        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min . max end
   19        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min . end_state end
   20        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min . max end_state end

    SVF_MAXIMUM          shift, and go to state 77
    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 133
    max        go to state 134
    end_state  go to state 135


State 123

   18 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 136


State 124

   26 command: SVF_INSTRUCTION_RUNTEST stable_state min max end .

    $default  reduce using rule 26 (command)


State 125

   28 command: SVF_INSTRUCTION_RUNTEST stable_state min max end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 137


State 126

   27 command: SVF_INSTRUCTION_RUNTEST stable_state min end_state end .

    $default  reduce using rule 27 (command)


State 127

   77 max: SVF_MAXIMUM SVF_REAL_NUMBER SVF_SEC .

    $default  reduce using rule 77 (max)


State 128

   24 command: SVF_INSTRUCTION_RUNTEST min max end_state end .

    $default  reduce using rule 24 (command)


State 129

   70 common: SVF_UNSIGNED_INT tdi tdo mask smask .

    $default  reduce using rule 70 (common)


State 130

   11 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min max end .

    $default  reduce using rule 11 (command)


State 131

   14 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min max end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 138


State 132

   13 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min end_state end .

    $default  reduce using rule 13 (command)


State 133

   16 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min end .

    $default  reduce using rule 16 (command)


State 134

   17 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min max . end
   20        | SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min max . end_state end

    SVF_ENDSTATE         shift, and go to state 78
    SVF_INSTRUCTION_END  shift, and go to state 22

    end        go to state 139
    end_state  go to state 140


State 135

   19 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 141


State 136

   18 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk end_state end .

    $default  reduce using rule 18 (command)


State 137

   28 command: SVF_INSTRUCTION_RUNTEST stable_state min max end_state end .

    $default  reduce using rule 28 (command)


State 138

   14 command: SVF_INSTRUCTION_RUNTEST SVF_UNSIGNED_INT run_clk min max end_state end .

    $default  reduce using rule 14 (command)


State 139

   17 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min max end .

    $default  reduce using rule 17 (command)


State 140

   20 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min max end_state . end

    SVF_INSTRUCTION_END  shift, and go to state 22

    end  go to state 142


State 141

   19 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min end_state end .

    $default  reduce using rule 19 (command)


State 142

   20 command: SVF_INSTRUCTION_RUNTEST stable_state SVF_UNSIGNED_INT run_clk min max end_state end .

    $default  reduce using rule 20 (command)
