variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build-environment
  - build

default:
  before_script:
    - sudo chown -R $(whoami) .
    - mkdir -p ~/.ssh/ && cp "$CI_SSH_KEY" ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - mkdir -p ./helper/goldi-development-container/licenses && cp "$LATTICE_LICENSE" ./helper/goldi-development-container/licenses/lattice.dat

.default_rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG==null'
      variables:
        PIPELINE_NAME: 'Branch pipeline: $CI_COMMIT_BRANCH'
        BRANCH: $CI_COMMIT_BRANCH
        RELEASE: ''
#   - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG!=null'
#     variables:
#       PIPELINE_NAME: 'Branch pipeline: $CI_COMMIT_BRANCH'
#       BRANCH: CI_COMMIT_TAG
#       RELEASE: '--release'

build-environment:
  image: goldi-devcontainer:build
  rules:
    - !reference [.default_rules]
    - if : '$CI_PIPELINE_SOURCE == "schedule"'
      when: always
  stage: build-environment
  script:
    - ./scripts/ci.sh --tag environment --no-upload --branch $BRANCH
    - cat ./helper/goldi-development-container/dist/goldi-devcontainer.tar | docker load

build:
  image: goldi-devcontainer:build
  rules:
    - !reference [.default_rules]
    - if : '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  stage: build
  script:
    - ./scripts/ci.sh --upload --branch $BRANCH --skip-tag firmware $RELEASE

build-daily:
  image: goldi-devcontainer:build
  rules:
    - !reference [.default_rules]
    - if : '$CI_PIPELINE_SOURCE == "schedule"'
      when: always
  stage: build
  script:
    - ./scripts/ci.sh --upload --branch $BRANCH $RELEASE
