variables:
  GIT_SUBMODULE_STRATEGY: recursive

image: crosslab/development-container

stages:
  - build
  - lint
  - test

default:
  before_script:
    - ls -al .
    - sudo chown -R $USER:$USER .
    - ls -al .
    - mkdir -p ~/.ssh/ && cp "$CI_SSH_KEY" ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - >
      for JOB in $DEPENDENCIES; do
        ./scripts/download_artifacts.sh -b $CI_COMMIT_BRANCH -j $JOB
      done
    - cd "$PROJECT_DIR"
  after_script:
    - mkdir -p ~/.ssh/ && cp "$CI_SSH_KEY" ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - cd "$CI_BUILDS_DIR" && cd "$CI_PROJECT_DIR" && ./scripts/upload_badges.sh $CI_JOB_STATUS
  cache:
    key: "$CI_COMMIT_REF_SLUG-$PROJECT_DIR"
    paths:
      - $PROJECT_DIR/node_modules

.build:
  stage: build
  script:
    - wget https://img.shields.io/badge/build-passing-success?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_success.svg"
    - wget https://img.shields.io/badge/build-failed-critical?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_failed.svg"
    - ./scripts/build.sh
    - cd "$CI_BUILDS_DIR" && cd "$CI_PROJECT_DIR" && ./scripts/check_no_changes.sh
    - cd "$CI_BUILDS_DIR" && cd "$CI_PROJECT_DIR" && ./scripts/upload_artifacts.sh -b $CI_COMMIT_BRANCH -j $CI_JOB_NAME -f $PROJECT_DIR/dist

.build-spec:
  stage: build
  script:
    - wget https://img.shields.io/badge/spec%20build-passing-success?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_success.svg"
    - wget https://img.shields.io/badge/spec%20build-failed-critical?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_failed.svg"
    - ./scripts/build.sh -s
    - cd "$CI_BUILDS_DIR" && cd "$CI_PROJECT_DIR" && ./scripts/check_no_changes.sh
    - cd "$CI_BUILDS_DIR" && cd "$CI_PROJECT_DIR" && ./scripts/upload_artifacts.sh -b $CI_COMMIT_BRANCH -j $CI_JOB_NAME -f $PROJECT_DIR/dist
    
.lint:
  stage: lint
  script:
    - wget https://img.shields.io/badge/linting-passing-success?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_success.svg"
    - wget https://img.shields.io/badge/linting-failed-critical?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_failed.svg"
    - ./scripts/lint.sh

.test:
  stage: test
  script:
    - wget https://img.shields.io/badge/tests-passing-success?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_success.svg"
    - wget https://img.shields.io/badge/tests-failed-critical?style=flat-square -O "badge_${CI_JOB_NAME//\//_}_failed.svg"
    - ./scripts/test.sh
    - >
      if [ -f coverage.txt ]; then
        wget https://img.shields.io/badge/coverage-$(cat coverage.txt)-informational?style=flat-square -O "badge_${PROJECT_DIR//\//_}-coverage.svg"
      fi

################################################################################
# Hardware #####################################################################
################################################################################
hardware/os-rebuild-world:
  image: ghcr.io/siemens/kas/kas
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  timeout: 48h
  script:
    - cd hardware/os
    - mkdir -p ~/.ssh/ && cp "$CI_SSH_KEY" ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - cp "$LOCAL_YML_NO_CACHE" local.yml && cp "$DEV_CRT" signing.crt.pem && cp "$DEV_KEY" signing.key.pem
    - ./scripts/build.sh -c -w --run_on_host
    - ./scripts/sync_sstate.sh -c
    - cd "$CI_BUILDS_DIR" && cd "$CI_PROJECT_DIR" && ./scripts/check_no_changes.sh

dummy-job:
  before_script: []
  after_script: []
  cache: []
  artifacts: {}
  script: ['echo "Workaround for https://gitlab.com/gitlab-org/gitlab/-/issues/331816"']
