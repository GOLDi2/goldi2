{"version":3,"file":"workspace.js","sourceRoot":"","sources":["workspace.ts"],"names":[],"mappings":"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","sourcesContent":["//\n// SimcirJS\n//\n// Copyright (c) 2014 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\nimport transform = SVGGraphics.transform;\n\ntype position = { x: number, y: number }\n\nclass Timer {\n    protected timerId;\n    protected start;\n    protected remaining;\n\n    constructor(delay: number, protected callback: () => (void), protected cancelCallback) {\n        this.remaining = delay;\n        this.resume();\n    }\n\n    pause() {\n        window.clearTimeout(this.timerId);\n        this.remaining -= +(new Date()) - this.start;\n    };\n\n    resume() {\n        this.start = new Date();\n        window.clearTimeout(this.timerId);\n        this.timerId = window.setTimeout(this.callback, this.remaining);\n    };\n\n    cancel() {\n        window.clearTimeout(this.timerId);\n        this.cancelCallback();\n    }\n}\n\n\nvar simcir = function ($) {\n\n    var createSVGElement = SVGGraphics.createSVGElement;\n    var createSVG = SVGGraphics.createSVG;\n    var graphics = function ($target) {\n        return new SVGGraphics.SVGGraphics($target);\n    };\n    var transform = SVGGraphics.transform;\n\n    var rotateCoords = function (p: position, angle: number): position {\n        const radAngle = angle / 180 * Math.PI;\n        return {\n            x: Math.round(Math.cos(radAngle) * p.x - Math.sin(radAngle) * p.y),\n            y: Math.round(Math.sin(radAngle) * p.x + Math.cos(radAngle) * p.y)\n        };\n    };\n\n    var normalizeAngle = function (angle: number): number {\n        return (angle % 360 + 360) % 360;\n    };\n\n    var clone = function (obj) {\n        return JSON.parse(JSON.stringify(obj));\n    };\n\n    var eachClass = function ($o, f) {\n        var className = $o.attr('class');\n        if (className) {\n            $.each(className.split(/\\s+/g), f);\n        }\n    };\n\n    var addClass = function ($o, className, remove?) {\n        var newClass = '';\n        eachClass($o, function (i, c) {\n            if (!(remove && c == className)) {\n                newClass += '\\u0020';\n                newClass += c;\n            }\n        });\n        if (!remove) {\n            newClass += '\\u0020';\n            newClass += className;\n        }\n        $o.attr('class', newClass);\n        return $o;\n    };\n\n    var removeClass = function ($o, className) {\n        return addClass($o, className, true);\n    };\n\n    var hasClass = function ($o, className) {\n        var found = false;\n        eachClass($o, function (i, c) {\n            if (c == className) {\n                found = true;\n            }\n        });\n        return found;\n    };\n\n\n    var offset = function ($o, prex?: number, prey?: number, absolute?: boolean) {\n        var x = prex || 0;\n        var y = prey || 0;\n        while ($o[0].nodeName != 'svg' && (!$o.hasClass('simcir-containerPane') || absolute)) {\n            var pos = transform($o);\n\n            const angle = pos.rotate * Math.PI / 180;\n            //apply rotation matrix\n            [x, y] = [Math.round(Math.cos(angle) * x - Math.sin(angle) * y),\n                Math.round(Math.sin(angle) * x + Math.cos(angle) * y)];\n\n            x *= pos.zoom;\n            y *= pos.zoom;\n\n            x += pos.x;\n            y += pos.y;\n            $o = $o.parent();\n        }\n        return {x: x, y: y};\n    };\n\n    var enableEvents = function ($o, enable) {\n        $o.css('pointer-events', enable ? 'visiblePainted' : 'none');\n    };\n\n    var disableSelection = function ($o) {\n        $o.each(function () {\n            this.onselectstart = function () {\n                return false;\n            };\n        })\n            .css('-webkit-user-select', 'none');\n    };\n\n    var controller = function (): any {\n        var id = 'controller';\n        return function ($ui, controller) {\n            if (arguments.length == 1) {\n                return $.data($ui[0], id);\n            }\n            else if (arguments.length == 2) {\n                $.data($ui[0], id, controller);\n            }\n        };\n    }();\n\n    var markDirty = function ($elem: JQuery, stateOnly?: boolean) {\n        const $workspace = $elem.closest('.simcir-workspace');\n        controller($workspace)\n            .markDirty(stateOnly);\n    };\n\n    var eventQueue = new EventQueue();\n\n    var unit = 16;\n    var fontSize = 12;\n\n    var createLabel = function (text) {\n        return createSVGElement('text')\n            .text(text)\n            .css('font-size', fontSize + 'px');\n    };\n\n    var createNode = function (type, label, description, headless) {\n        var $node = createSVGElement('g')\n            .attr('simcir-node-type', type);\n        if (!headless) {\n            $node.attr('class', 'simcir-node');\n        }\n        var node = createNodeController({\n            $ui: $node, type: type, label: label,\n            description: description, headless: headless\n        });\n        if (type == 'in') {\n            controller($node, createInputNodeController(node));\n        }\n        else if (type == 'out') {\n            controller($node, createOutputNodeController(node));\n        }\n        else {\n            throw 'unknown type:' + type;\n        }\n        return $node;\n    };\n\n    var isActiveNode = function ($o) {\n        return $o.closest('.simcir-node').length == 1;\n    };\n\n    var createNodeController = function (node) {\n        var _value = null;\n        var setValue = function (value, force) {\n            if (_value === value && !force) {\n                return;\n            }\n            _value = value;\n            eventQueue.postEvent({target: node.$ui, type: 'nodeValueChange'});\n        };\n        var getValue = function () {\n            return _value;\n        };\n\n        var showConnectorState = false;\n\n        var setShowConnectorState = (showState: boolean) => null;\n\n        if (!node.headless) {\n\n            node.$ui.attr('class', 'simcir-node simcir-node-type-' + node.type);\n\n            var $circle = createSVGElement('circle')\n                .attr({cx: 0, cy: 0, r: 4});\n            node.$ui.on('mouseover', function (event) {\n                if (isActiveNode(node.$ui)) {\n                    addClass(node.$ui, 'simcir-node-hover');\n                }\n            });\n            node.$ui.on('mouseout', function (event) {\n                if (isActiveNode(node.$ui)) {\n                    removeClass(node.$ui, 'simcir-node-hover');\n                }\n            });\n            node.$ui.append($circle);\n            var appendLabel = function (text, align) {\n                var $label = createLabel(text)\n                    .attr('class', 'simcir-node-label');\n                enableEvents($label, false);\n                if (align == 'right') {\n                    $label.attr('text-anchor', 'start')\n                        .attr('x', 6)\n                        .attr('y', fontSize / 2);\n                }\n                else if (align == 'left') {\n                    $label.attr('text-anchor', 'end')\n                        .attr('x', -6)\n                        .attr('y', fontSize / 2);\n                }\n                node.$ui.append($label);\n            };\n            if (node.label) {\n                if (node.type == 'in') {\n                    appendLabel(node.label, 'right');\n                }\n                else if (node.type == 'out') {\n                    appendLabel(node.label, 'left');\n                }\n            }\n            if (node.description) {\n                if (node.type == 'in') {\n                    appendLabel(node.description, 'left');\n                }\n                else if (node.type == 'out') {\n                    appendLabel(node.description, 'right');\n                }\n            }\n\n            var updateState = function () {\n                if (showConnectorState) {\n                    node.$ui.toggleClass('simcir-node-hot', _value != null);\n                    node.$ui.toggleClass('simcir-node-cold', _value == null);\n                }\n            };\n\n            node.$ui.on('nodeValueChange', updateState);\n\n            setShowConnectorState = function (state: boolean) {\n                showConnectorState = state;\n                if (state) {\n                    updateState();\n                }\n                else {\n                    node.$ui.removeClass('simcir-node-hot');\n                    node.$ui.removeClass('simcir-node-cold');\n                }\n            };\n        }\n\n        return $.extend(node, {\n            setValue: setValue,\n            getValue: getValue,\n            setShowConnectorState: setShowConnectorState\n        });\n    };\n\n    var createInputNodeController = function (node) {\n        var output = null;\n        var setOutput = function (outNode) {\n            output = outNode;\n        };\n        var getOutput = function () {\n            return output;\n        };\n        return $.extend(node, {\n            setOutput: setOutput,\n            getOutput: getOutput\n        });\n    };\n\n    var createOutputNodeController = function (node) {\n        var inputs = [];\n        var super_setValue = node.setValue;\n        var setValue = function (value) {\n            super_setValue(value);\n            for (var i = 0; i < inputs.length; i += 1) {\n                inputs[i].setValue(value);\n            }\n        };\n        var connectTo = function (inNode) {\n            if (inNode.getOutput() != null) {\n                inNode.getOutput()\n                    .disconnectFrom(inNode);\n            }\n            inNode.setOutput(node);\n            inputs.push(inNode);\n            inNode.setValue(node.getValue(), true);\n        };\n        var disconnectFrom = function (inNode) {\n            if (inNode.getOutput() != node) {\n                throw 'not connected.';\n            }\n            inNode.setOutput(null);\n            inNode.setValue(null, true);\n            inputs = $.grep(inputs, function (v) {\n                return v != inNode;\n            });\n        };\n        var getInputs = function () {\n            return inputs;\n        };\n        return $.extend(node, {\n            setValue: setValue,\n            getInputs: getInputs,\n            connectTo: connectTo,\n            disconnectFrom: disconnectFrom\n        });\n    };\n\n    var createDevice = function (deviceDef, componentLoader: (id: GlobalComponentTypeID) => Component, headless?, scope?) {\n        headless = headless || false;\n        scope = scope || null;\n        var $dev = createSVGElement('g');\n        if (!headless) {\n            $dev.attr('class', 'simcir-device');\n        }\n        const component = componentLoader(deviceDef.type);\n\n        controller($dev, createDeviceController(\n            {\n                $ui: $dev, deviceDef: deviceDef,\n                headless: headless, scope: scope, doc: null\n            }, component.name));\n\n\n        if (Component.isBasic(component)) {\n            component.factory(controller($dev));\n        }\n        else if (Component.isCompound(component)) {\n            const factory = createDeviceRefFactory(component, componentLoader);\n            factory(controller($dev));\n        }\n        else {\n            InfoDialog.showDialog('Unknown device!');\n        }\n        if (!headless) {\n            controller($dev)\n                .createUI();\n        }\n        return $dev;\n    };\n\n    var createDeviceController = function (device, defaultLabel) {\n            var inputs = [];\n            var outputs = [];\n            var addInput = function (label, description, idx = inputs.length) {\n                var $node = createNode('in', label, description, device.headless);\n                $node.on('nodeValueChange', function (event) {\n                    device.$ui.trigger('inputValueChange');\n                });\n                if (!device.headless) {\n                    device.$ui.append($node);\n                }\n                var node = controller($node);\n                inputs.splice(idx, 0, node);\n                node.setShowConnectorState(showConnectorState);\n                return node;\n            };\n            var addOutput = function (label, description, idx = outputs.length) {\n                var $node = createNode('out', label, description, device.headless);\n                if (!device.headless) {\n                    device.$ui.append($node);\n                }\n                var node = controller($node);\n                outputs.splice(idx, 0, node);\n                node.setShowConnectorState(showConnectorState);\n                return node;\n            };\n            var removeInput = function (idx : number = inputs.length-1) {\n                const input = inputs.splice(idx,1)[0];\n                const outNode = input.getOutput();\n                if (outNode != null) {\n                    outNode.disconnectFrom(input);\n                }\n                input.$ui.remove();\n            };\n            var removeOutput = function (idx : number = outputs.length-1) {\n                const lastOutput = outputs.splice(idx,1)[0];\n                lastOutput.getInputs().forEach((input) => {\n                    lastOutput.disconnectFrom(input);\n                });\n                lastOutput.$ui.remove();\n            };\n            var getInputs = function () {\n                return inputs;\n            };\n            var getOutputs = function () {\n                return outputs;\n            };\n            var disconnectAll = function () {\n                $.each(getInputs(), function (i, inNode) {\n                    var outNode = inNode.getOutput();\n                    if (outNode != null) {\n                        outNode.disconnectFrom(inNode);\n                    }\n                });\n                $.each(getOutputs(), function (i, outNode) {\n                    $.each(outNode.getInputs(), function (i, inNode) {\n                        outNode.disconnectFrom(inNode);\n                    });\n                });\n            };\n\n            var selected = false;\n            var setSelected = function (value) {\n                selected = value;\n                device.$ui.trigger('deviceSelect');\n            };\n            var isSelected = function () {\n                return selected;\n            };\n\n            var label = device.deviceDef.label || defaultLabel;\n\n            var setLabel = function (value) {\n                value = value.replace(/^\\s+|\\s+$/g, '');\n                label = value || defaultLabel;\n                device.deviceDef.label = label;\n                device.$ui.trigger('deviceLabelChange');\n            };\n            var getLabel = function () {\n                return device.deviceDef.label || label;\n            };\n\n            var getSize = function () {\n                var nodes = Math.max(device.getInputs().length,\n                    device.getOutputs().length);\n                return {\n                    width: unit * 2,\n                    height: unit * Math.max(2, device.halfPitch ?\n                        (nodes + 1) / 2 : nodes)\n                };\n            };\n\n            var layoutInput: (nodes) => number[] = (nodes) => {\n                const pitch = device.halfPitch ? unit / 2 : unit;\n                const offset = (device.getSize().height - pitch * (nodes.length - 1) ) / 2;\n                const pos = [];\n                nodes.forEach((value, i) => {\n                    pos[i] = pitch * i + offset;\n                });\n                return pos;\n            };\n\n            var layoutOutput: (nodes) => number[] = layoutInput;\n\n            var layoutUI = () => {\n\n                const size = device.getSize();\n                const w = size.width;\n                const h = size.height;\n\n                device.$ui.children('.simcir-device-body')\n                    .attr({x: 0, y: 0, width: w, height: h});\n\n                const layoutNodes = (nodes, x, pos) => {\n                    $.each(nodes, (i, node) => {\n                        transform(node.$ui, x, pos[i]);\n                    });\n                };\n                const inputs = getInputs();\n                const outputs = getOutputs();\n                layoutNodes(inputs, 0, device.layoutInput(inputs));\n                layoutNodes(outputs, w, device.layoutOutput(outputs));\n\n                device.$ui.children('.simcir-device-label')\n                    .attr({x: w / 2, y: h + fontSize});\n            };\n\n            var updateLabelPosition = () => (null);\n\n            var createUI = function () {\n\n                device.$ui.attr('class', 'simcir-device');\n                device.$ui.on('deviceSelect', function () {\n                    if (selected) {\n                        addClass($(this), 'simcir-device-selected');\n                    }\n                    else {\n                        removeClass($(this), 'simcir-device-selected');\n                    }\n                });\n\n                var $body = createSVGElement('rect')\n                    .attr('class', 'simcir-device-body')\n                    .attr('rx', 2)\n                    .attr('ry', 2);\n                device.$ui.prepend($body);\n\n                var $label = createLabel(label)\n                    .attr('class', 'simcir-device-label')\n                    .attr('text-anchor', 'middle');\n                device.$ui.on('deviceLabelChange', function () {\n                    $label.text(getLabel());\n                    updateLabelPosition();\n                });\n\n                var dblClickHandler = function (event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    openParameterDialog();\n                };\n                device.$ui.on('deviceAdd', function () {\n                    device.$ui.on('dblclick', dblClickHandler);\n                    $label.on('dblclick', dblClickHandler);\n                });\n                device.$ui.on('deviceRemove', function () {\n                    device.$ui.off('dblclick', dblClickHandler);\n                    $label.off('dblclick', dblClickHandler);\n                });\n                //device.$ui.append($label);\n\n\n                device.$ui.on('deviceAdd', () => {\n                    if (device.doc == null || device.doc.haslabel === undefined || device.doc.haslabel == true) {\n                        device.$ui.closest('.simcir-devicepane')\n                            .append($label);\n                    }\n                    updateLabelPosition = function () {\n                        const anchor = getAnchorBelow();\n                        $label.attr({x: anchor.x, y: anchor.y + 1 * unit});\n                    };\n\n                    updateLabelPosition();\n                    device.$ui.on('deviceRemove', () => $label.remove());\n                });\n\n                layoutUI();\n\n            };\n\n            var paramDialog: ParameterDialog = null;\n\n            var openParameterDialog = function () {\n                if (paramDialog !== null && paramDialog.isOpen) {\n                    return;\n                }\n\n                let setValues = (newvalues) => {\n                    $.extend(device.deviceDef, newvalues);\n                    device.$ui.trigger('parameterChange');\n                    device.$ui.trigger('deviceLabelChange');\n                    if ($tooltip !== null) {\n                        showTooltip();\n                    }\n                    markDirty(device.$ui);\n                    controller(device.$ui.closest('.simcir-workspace'))\n                        .updateConnectors();\n                };\n                let params: Array<SimcirParamDescription> = device.doc != null ? device.doc.params || [] : [];\n                if (device.doc == null || device.doc.haslabel === undefined || device.doc.haslabel == true) {\n                    let labledef: SimcirParamDescription = {\n                        name: 'label',\n                        type: 'string',\n                        description: 'Label of the device',\n                        displayName: 'Label',\n                        defaultValue: getLabel()\n                    };\n                    params = [labledef].concat(params);\n                }\n                paramDialog = new ParameterDialog(params, device.deviceDef, setValues);\n                paramDialog.show();\n            };\n\n            var $tooltip: JQuery = null;\n\n            var showTooltip = function () {\n                if (device.doc === null) {\n                    return;\n                }\n                removeTooltip();\n\n                const $container = $('<div></div>');\n                const $table = $('<table></table>');\n\n                for (let paramDesc of device.doc.params) {\n                    const $row = $('<tr></tr>');\n                    $row.append($('<td class=\\'name\\'></td>')\n                        .text((paramDesc.displayName || paramDesc.name) + ':'));\n                    let value = device.deviceDef[paramDesc.name] || paramDesc.defaultValue;\n                    let $value = $('<td class=\\'value\\'></td>')\n                        .text(value);\n                    if (paramDesc.type === 'color') {\n                        $value.append($('<span class=\\'beast-parameter-colorpreview\\'></span>')\n                            .css('background-color', value));\n                    }\n                    $row.append($value);\n                    $table.append($row);\n                }\n\n                $container.append($table);\n                $container.addClass('beast-parameter-tooltip');\n                $tooltip = SVGGraphics.createSVGElement('foreignObject');\n                $tooltip.append($container);\n\n                updateTooltipPosition();\n            };\n\n            var getAnchorBelow = function (): position {\n                let bb;\n                try {\n                    bb = device.$ui.find('.simcir-device-body')[0].getBBox();\n                }\n                catch (err) {\n                    console.error(\"Bounding Box failed!\")\n                    return {x: 0, y: 0}\n                }\n                const doff = offset(device.$ui);\n                const radrot = -transform(device.$ui).rotate * Math.PI / 180;\n                const dx = (Math.cos(radrot) * bb.width + Math.sin(radrot) * bb.height) / 2;\n                const w = bb.width;\n                const h = bb.height;\n                const corners = [\n                    {x: 0, y: 0},\n                    {x: w, y: h},\n                    {x: 0, y: h},\n                    {x: w, y: 0}\n                ];\n\n                const posy = Math.max(...corners.map((point) => offset(device.$ui, point.x, point.y).y));\n\n                return {x: doff.x + dx, y: posy};\n            };\n\n            var updateTooltipPosition = function () {\n                if ($tooltip !== null) {\n                    const h = 200;\n                    const w = 250;\n                    //$tooltip.attr({x: size.width /2 - w/2, y: size.height + unit, width: w, height: h});\n                    const anchor = getAnchorBelow();\n                    $tooltip.attr({x: anchor.x - w / 2, y: anchor.y + unit, width: w, height: h});\n                    device.$ui.closest('.simcir-containerPane')\n                        .append($tooltip);\n                }\n            };\n\n            var removeTooltip = function () {\n                if ($tooltip !== null) {\n                    $tooltip.remove();\n                    $tooltip = null;\n                }\n            };\n\n            device.$ui.on('deviceRemove', () => removeTooltip());\n\n            var getState = function () {\n                return null;\n            };\n\n            var updatePosition = function () {\n                updateTooltipPosition();\n                updateLabelPosition();\n            };\n\n            var showConnectorState = true;\n\n            var setShowConnectorState = function(showState: boolean) {\n                showConnectorState = showState;\n            }\n\n\n            device.$ui.on('transformed', updatePosition);\n\n            return $.extend(device, {\n                addInput: addInput,\n                addOutput: addOutput,\n                removeInput: removeInput,\n                removeOutput: removeOutput,\n                getInputs: getInputs,\n                getOutputs: getOutputs,\n                disconnectAll: disconnectAll,\n                setSelected: setSelected,\n                isSelected: isSelected,\n                getLabel: getLabel,\n                halfPitch: false,\n                markDirty: (stateOnly?: boolean) => (markDirty(device.$ui, stateOnly)),\n                getSize: getSize,\n                createUI: createUI,\n                layoutUI: layoutUI,\n                getState: getState,\n                openParameterDialog: openParameterDialog,\n                showTooltip: showTooltip,\n                removeTooltip: removeTooltip,\n                updatePosition: updatePosition,\n                setShowConnectorState: (showState: boolean) => null,\n                layoutInput,\n                layoutOutput,\n            });\n        }\n    ;\n\n    var createConnector = function (x1, y1, x2, y2) {\n        return createSVGElement('path')\n            .attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2)\n            .attr('class', 'simcir-connector');\n    };\n\n    var connect = function ($node1, $node2) {\n        var type1 = $node1.attr('simcir-node-type');\n        var type2 = $node2.attr('simcir-node-type');\n        if (type1 == 'in' && type2 == 'out') {\n            controller($node2)\n                .connectTo(controller($node1));\n        }\n        else if (type1 == 'out' && type2 == 'in') {\n            controller($node1)\n                .connectTo(controller($node2));\n        }\n    };\n\n    var buildCircuit = function (data, componentLoader: (id: GlobalComponentTypeID) => Component, headless, scope) {\n        var $devices = [];\n        var $devMap = {};\n        var getNode = function (path) {\n            if (!path.match(/^(\\w+)\\.(in|out)([0-9]+)$/g)) {\n                throw 'unknown path:' + path;\n            }\n            var devId = RegExp.$1;\n            var type = RegExp.$2;\n            var index = +RegExp.$3;\n            return (type == 'in') ?\n                controller($devMap[devId])\n                    .getInputs()[index] :\n                controller($devMap[devId])\n                    .getOutputs()[index];\n        };\n        $.each(data.devices, function (i, deviceDef) {\n            var $dev = createDevice(deviceDef, componentLoader, headless, scope);\n            transform($dev, deviceDef.x, deviceDef.y, deviceDef.rotation || 0);\n            $devices.push($dev);\n            $devMap[deviceDef.id] = $dev;\n        });\n        $.each(data.connectors, function (i, conn) {\n            var nodeFrom = getNode(conn.from);\n            var nodeTo = getNode(conn.to);\n            if (nodeFrom && nodeTo) {\n                connect(nodeFrom.$ui, nodeTo.$ui);\n            }\n        });\n        return $devices;\n    };\n\n\n    var createDeviceRefFactory = function (data, componentLoader: (id: GlobalComponentTypeID) => Component) {\n        return function (device) {\n            var $devs = buildCircuit(data, componentLoader, true, {});\n            var $ports = [];\n            $.each($devs, function (i, $dev) {\n                var deviceDef = controller($dev).deviceDef;\n                if (deviceDef.type.libraryID == BeastController.BASIC_LIB_ID &&\n                    (deviceDef.type.componentID == 'In' || deviceDef.type.componentID == 'Out')) {\n                    $ports.push($dev);\n                }\n            });\n            $ports.sort(function ($p1, $p2) {\n                var x1 = controller($p1).deviceDef.x;\n                var y1 = controller($p1).deviceDef.y;\n                var x2 = controller($p2).deviceDef.x;\n                var y2 = controller($p2).deviceDef.y;\n                if (x1 == x2) {\n                    return (y1 < y2) ? -1 : 1;\n                }\n                return (x1 < x2) ? -1 : 1;\n            });\n            var getDesc = function (port) {\n                return port ? port.description : '';\n            };\n            $.each($ports, function (i, $port) {\n                var port = controller($port);\n                var portDef = port.deviceDef;\n                var inPort;\n                var outPort;\n                if (portDef.type.componentID == 'In') {\n                    outPort = port.getOutputs()[0];\n                    inPort = device.addInput(portDef.label,\n                        getDesc(outPort.getInputs()[0]));\n                    // force disconnect test devices that connected to In-port\n                    var inNode = port.getInputs()[0];\n                    if (inNode.getOutput() != null) {\n                        inNode.getOutput()\n                            .disconnectFrom(inNode);\n                    }\n                }\n                else if (portDef.type.componentID == 'Out') {\n                    inPort = port.getInputs()[0];\n                    outPort = device.addOutput(portDef.label,\n                        getDesc(inPort.getOutput()));\n                    // force disconnect test devices that connected to Out-port\n                    var outNode = port.getOutputs()[0];\n                    $.each(outNode.getInputs(), function (i, inNode) {\n                        if (inNode.getOutput() != null) {\n                            inNode.getOutput()\n                                .disconnectFrom(inNode);\n                        }\n                    });\n                }\n                inPort.$ui.on('nodeValueChange', function () {\n                    outPort.setValue(inPort.getValue());\n                });\n            });\n            var super_getSize = device.getSize;\n            device.getSize = function () {\n                var size = super_getSize();\n                return {width: unit * 4, height: size.height};\n            };\n            device.$ui.on('dblclick', function (event) {\n                controller(device.$ui.closest('.simcir-workspace'))\n                    .openCompound(device.deviceDef.type);\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            });\n        };\n    };\n\n    var getUniqueId = function () {\n        var uniqueIdCount = 0;\n        return function () {\n            return 'simcir-id' + uniqueIdCount++;\n        };\n    }();\n\n    var createWorkspace = function (data, $container, getLibraryComponent: (id: GlobalComponentTypeID) => Component) {\n\n        data = $.extend({\n            width: 400,\n            height: 200,\n            devices: [],\n            connectors: []\n        }, data);\n\n        const timers: Array<Timer> = [];\n\n        const addTimer = function(delay: number, callback) : Timer{\n            var timer;\n\n            const cancelCallback = () => {\n                const index = timers.indexOf(timer, 0);\n                if (index > -1) {\n                    timers.splice(index, 1);\n                }\n            };\n            timer = new Timer(delay, ()=>{callback(); cancelCallback()} ,cancelCallback);\n            timers.push(timer);\n            return timer;\n        };\n\n        const setPauseTimers = function(pause: boolean) {\n            for (const timer of timers) {\n                if (pause)\n                    timer.pause();\n                else\n                    timer.resume();\n            }\n        }\n\n        var scope = {addTimer};\n        var barWidth = unit;\n\n        var $workspace = createSVG()\n            .attr('class', 'simcir-workspace');\n        disableSelection($workspace);\n\n        var $defs = createSVGElement('defs');\n        var $containerPane = createSVGElement('g')\n            .addClass('simcir-containerPane');\n\n        $workspace.append($defs);\n        $workspace.append($containerPane);\n\n        var $workspaceBackground;\n        var patternPitch = unit / 2;\n\n        !function () {\n\n            // fill with pin hole pattern.\n            var patId = getUniqueId();\n            var w = 3 * 6000;\n            var h = 3 * 4000;\n\n            $defs.append(createSVGElement('pattern')\n                .attr({\n                    id: patId, x: 0, y: 0,\n                    width: patternPitch / w, height: patternPitch / h\n                })\n                .append(\n                    createSVGElement('rect')\n                        .attr('class', 'simcir-pin-hole')\n                        .attr({x: 0, y: 0, width: 1, height: 1})));\n\n            $workspaceBackground = createSVGElement('rect')\n                .attr({x: -3000, y: -3000, width: w, height: h})\n                .css({fill: 'url(#' + patId + ')'});\n        }();\n        $containerPane.append($workspaceBackground);\n\n        var $devicePane = createSVGElement('g');\n        $devicePane.addClass('simcir-devicepane');\n        var $connectorPane = createSVGElement('g');\n        var $temporaryPane = createSVGElement('g');\n\n        enableEvents($connectorPane, false);\n        enableEvents($temporaryPane, false);\n\n        $containerPane.append($devicePane);\n        $containerPane.append($connectorPane);\n        $containerPane.append($temporaryPane);\n\n        $container.append($workspace);\n\n        var addDevice = function ($dev) {\n            $devicePane.append($dev);\n            $dev.trigger('deviceAdd');\n            controller($dev)\n                .updatePosition();\n            controller($dev)\n                .setShowConnectorState(showConnectorState);\n            for (let $node of $dev.find('.simcir-node')\n                .toArray()) {\n                controller($($node))\n                    .setShowConnectorState(showConnectorState);\n            }\n        };\n\n        var removeDevice = function ($dev) {\n            $dev.trigger('deviceRemove');\n            // before remove, disconnect all\n            controller($dev)\n                .disconnectAll();\n            $dev.remove();\n            updateConnectors();\n        };\n\n        var disconnect = function ($inNode) {\n            var inNode = controller($inNode);\n            if (inNode.getOutput() != null) {\n                inNode.getOutput()\n                    .disconnectFrom(inNode);\n            }\n            updateConnectors();\n        };\n\n        var showConnectorState = false;\n\n        var updateConnectors = function () {\n            $connectorPane.children()\n                .remove();\n            $devicePane.children('.simcir-device')\n                .each(function () {\n                    var device = controller($(this));\n                    $.each(device.getInputs(), function (i, inNode) {\n                        if (inNode.getOutput() != null) {\n                            var p1 = offset(inNode.$ui);\n                            var p2 = offset(inNode.getOutput().$ui);\n                            const $connector = createConnector(p1.x, p1.y, p2.x, p2.y);\n                            $connectorPane.append($connector);\n                            if (inNode.$ui !== null) {\n                                var updateState = function () {\n                                    $connector.toggleClass('beast-connection-hot', inNode.getValue() === 1 && showConnectorState);\n                                    $connector.toggleClass('beast-connection-cold', inNode.getValue() !== 1 && showConnectorState);\n                                };\n\n                                inNode.$ui.on('nodeValueChange', () => updateState());\n                                updateState();\n                            }\n                        }\n                    });\n                });\n        };\n\n\n        var devicesCenterOfGravity = function ($devices: Array<JQuery>): position {\n            let xsum = 0, ysum = 0;\n\n            for (let $dev of $devices) {\n                const size = controller($($dev))\n                    .getSize();\n                const pos = offset($($dev), size.width / 2, size.height / 2);\n                xsum += pos.x;\n                ysum += pos.y;\n            }\n\n            return {x: xsum / $devices.length, y: ysum / $devices.length};\n        };\n\n        var exportPart = function ($devices: Array<JQuery>, center: boolean) {\n\n            // renumber all id\n            var devIdCount = 0;\n\n            for (let $dev of $devices) {\n                var device = controller($($dev));\n                var devId = 'dev' + devIdCount++;\n                device.id = devId;\n                $.each(device.getInputs(), function (i, node) {\n                    node.id = devId + '.in' + i;\n                });\n                $.each(device.getOutputs(), function (i, node) {\n                    node.id = devId + '.out' + i;\n                });\n            }\n            let devicecontrollers = $devices.map((d) => controller($(d)));\n\n            //When enabled, calculates the center of gravity or the (Sub-)Circuit\n            //and moves it to (0,0)\n            let deltax = 0, deltay = 0;\n            if (center) {\n                let cog = devicesCenterOfGravity($devices);\n                deltax = -cog.x;\n                deltay = -cog.y;\n            }\n\n            var devices = [];\n            var connectors = [];\n\n            for (let $dev of $devices) {\n                $dev = $($dev);\n                var device = controller($dev);\n                $.each(device.getInputs(), function (i, inNode) {\n                    const output = inNode.getOutput();\n                    if (output != null && devicecontrollers.indexOf(controller(output.$ui.closest('.simcir-device'))) != -1) {\n                        connectors.push({from: inNode.id, to: inNode.getOutput().id});\n                    }\n                });\n                var pos = transform($dev);\n                var deviceDef = clone(device.deviceDef);\n                deviceDef.id = device.id;\n                deviceDef.x = pos.x + deltax;\n                deviceDef.y = pos.y + deltay;\n                if (pos.rotate != 0) {\n                    deviceDef.rotation = pos.rotate;\n                }\n                var state = device.getState();\n                if (state != null) {\n                    deviceDef.state = state;\n                }\n                devices.push(deviceDef);\n            }\n            return {\n                ID: data.ID,\n                name: data.name,\n                devices: devices,\n                connectors: connectors\n            };\n        };\n\n        var getData = function () {\n            return exportPart(jQuery.makeArray($devicePane.children('.simcir-device')), false);\n        };\n\n        var pasteSubcircuit = function (subcircuit) {\n            const $subcircuit = buildCircuit(subcircuit, getLibraryComponent, false, scope);\n            const pos = tranformCoords({x: $workspace.width() / 2, y: $workspace.height() / 2});\n            deselectAll();\n            for (let $dev of $subcircuit) {\n                const oldpos = transform($dev);\n                transform($dev, oldpos.x + pos.x, oldpos.y + pos.y, oldpos.rotate, oldpos.zoom);\n                addDevice($dev);\n                addSelected($dev);\n            }\n            ;\n            updateConnectors();\n            markDirty($workspace);\n        };\n\n        //-------------------------------------------\n        // mouse operations\n\n        var dragMoveHandler = null;\n        var dragCompleteHandler = null;\n\n        var adjustDevice = function ($dev) {\n            var pitch = unit / 2;\n            var adjust = function (v) {\n                return Math.round(v / pitch) * pitch;\n            };\n            var pos = transform($dev);\n            var size = controller($dev)\n                .getSize();\n            transform($dev, adjust(pos.x), adjust(pos.y), pos.rotate);\n        };\n\n        var tranformCoords = function (p: position): position {\n            const globalTransform = transform($containerPane);\n            return {\n                x: (p.x - globalTransform.x) / globalTransform.zoom,\n                y: (p.y - globalTransform.y ) / globalTransform.zoom\n            };\n        };\n\n        var getEventPos = function (e: { pageX: number, pageY: number }): position {\n            const workspaceOffset = $workspace.offset();\n            return {x: e.pageX - workspaceOffset.left, y: e.pageY - workspaceOffset.top};\n        };\n\n        var tranformEventCoords = function (e: { pageX: number, pageY: number }): position {\n            return tranformCoords(getEventPos(e));\n        };\n        var isOutsideWorkspace = function (pos: position): boolean {\n            return pos.x < 0 || pos.y < 0 || pos.x > $workspace.width() || pos.y > $workspace.height();\n        };\n\n        var isFirstConnection = true;\n\n        var beginConnect = function (event, $target) {\n            var $srcNode = $target.closest('.simcir-node');\n            var off = $workspace.offset();\n            var pos = offset($srcNode);\n            var endpos;\n            var junctions = [];\n            var oldSrcNodes = [];\n            var $infoText = null;\n            if (isFirstConnection) {\n                isFirstConnection = false;\n                $infoText = createInfoText(\"Please note: You can use the <b>space</b> key to place a junction while connecting devices\");\n            }\n            if ($srcNode.attr('simcir-node-type') == 'in') {\n                disconnect($srcNode);\n            }\n            var insertJunction = function (event?) {\n                event.preventDefault();\n                event.stopPropagation();\n                oldSrcNodes.push($srcNode);\n                const forward = $srcNode.attr('simcir-node-type') == 'out';\n\n                var {x, y} = tranformEventCoords(endpos);\n\n                let joint = {type: new GlobalComponentTypeID(BeastController.BASIC_LIB_ID, 'Joint'), label: \" \"};\n                let $joint = createDevice(joint, getLibraryComponent, false, scope);\n                let size = controller($joint)\n                    .getSize();\n\n                var theta = Math.atan2(pos.y - y, pos.x - x);\n                theta = (!forward ? 0 : 180) + 90 * theta * 2 / (Math.PI);\n                theta = normalizeAngle(90 * Math.round(theta / 90));\n\n                addDevice($joint);\n\n                if (forward) {\n                    connect($srcNode, controller($joint)\n                        .getInputs()[0].$ui);\n                    $srcNode = controller($joint)\n                        .getOutputs()[0].$ui;\n                }\n                else {\n                    connect($srcNode, controller($joint)\n                        .getOutputs()[0].$ui);\n                    $srcNode = controller($joint)\n                        .getInputs()[0].$ui;\n                }\n\n                transform($joint, 0, 0, theta);\n                const portoffet = offset($srcNode);\n                transform($joint, x - portoffet.x, y - portoffet.y, theta);\n\n\n                adjustDevice($joint);\n                controller($joint)\n                    .updatePosition();\n                updateConnectors();\n                junctions.push($joint);\n                pos = offset($srcNode);\n                dragMoveHandler(endpos);\n                markDirty($srcNode);\n\n                controller($joint)\n                    .$ui\n                    .trigger('mouseout'); //Let the Joint fade out\n            };\n\n            var removeJunction = function (event?) {\n                if (junctions.length == 0) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n\n                let dev = junctions.pop();\n                $srcNode = oldSrcNodes.pop();\n                pos = offset($srcNode);\n                removeDevice(dev);\n                $temporaryPane.children()\n                    .remove();\n                updateConnectors();\n                dragMoveHandler(endpos);\n                markDirty($srcNode);\n            };\n\n            var keyDownHandler = function (event) {\n                const key = event.keyCode || event.charCode;\n\n                if (key == 8 || key == 46) {\n                    removeJunction(event);\n                }\n                if (event.key == ' ') {\n                    insertJunction(event);\n                }\n            };\n            $(document)\n                .on('keydown', keyDownHandler);\n\n            dragMoveHandler = function (event) {\n                endpos = event;\n                var {x, y} = tranformEventCoords(event);\n                $temporaryPane.children()\n                    .remove();\n                $temporaryPane.append(createConnector(pos.x, pos.y, x, y));\n            };\n\n            dragCompleteHandler = function (event) {\n                $(document)\n                    .off('keydown', keyDownHandler);\n                $temporaryPane.children()\n                    .remove();\n                var $dst = $(event.target);\n                let $dstNode = null;\n                if (isActiveNode($dst)) {\n                    $dstNode = $dst.closest('.simcir-node');\n                }\n                else if ($dst.closest('.simcir-device').length === 1) {\n                    const forward = $srcNode.attr('simcir-node-type') == 'out'; //Indicates signal direction\n\n                    let dev = controller($dst.closest('.simcir-device'));\n                    //Check for free ports\n                    for (let node of (forward ? dev.getInputs() : dev.getOutputs()).slice().reverse()) {\n                        if (forward ? !node.getOutput() : !node.getInputs().length)\n                            $dstNode = node.$ui;\n                    }\n\n                    if ($dstNode == null) {\n                        if (forward) {\n                            if (dev.doc && dev.doc.params) { //Check if we can add an input\n                                const paramDefs = dev.doc.params.filter((p) => p.name == \"numInputs\");\n                                if (paramDefs.length > 0) {\n                                    const curval = dev.deviceDef[paramDefs[0].name] || paramDefs[0].defaultValue;\n                                    dev.deviceDef[paramDefs[0].name] = curval + 1;\n                                    dev.$ui.trigger(\"parameterChange\");\n                                    dev.$ui.trigger('deviceLabelChange');\n                                    $dstNode = dev.getInputs().slice(-1)[0].$ui;\n                                }\n                            }\n                        }\n                        else if (dev.getOutputs().length > 0) { //If no output free: always choose first\n                            $dstNode = dev.getOutputs()[0].$ui;\n                        }\n\n                    }\n                }\n                if ($infoText)\n                    $infoText.remove();\n\n                if ($dstNode != null) {\n                    connect($srcNode, $dstNode);\n                    updateConnectors();\n                    markDirty($srcNode);\n                }\n            };\n        };\n\n        var $selectedDevices = [];\n        var showTooltips = false;\n\n        var addSelected = function ($dev) {\n            controller($dev).setSelected(true);\n            $selectedDevices.push($dev);\n            workspaceController.selectionChanged($selectedDevices.length);\n            if (showTooltips) {\n                controller($dev).showTooltip();\n            }\n        };\n\n        var deselectAll = function () {\n            $devicePane.children('.simcir-device')\n                .each(function () {\n                    controller($(this)).setSelected(false);\n                    if (showTooltips) {\n                        controller($(this)).removeTooltip();\n                    }\n                });\n            $selectedDevices = [];\n            workspaceController.selectionChanged(0);\n        };\n\n\n        var selectAll = function () {\n            deselectAll();\n            $devicePane.children('.simcir-device').each(function (i, d) {\n                addSelected($(d))\n            });\n        };\n\n        var setShowParameterTooltips = function (show: boolean) {\n            showTooltips = show;\n            for (let $dev of $selectedDevices) {\n                if (show) {\n                    controller($dev)\n                        .showTooltip();\n                }\n                else {\n                    controller($dev)\n                        .removeTooltip();\n                }\n            }\n        };\n        var removeSelected = function () {\n            $.each($selectedDevices, function (i, $dev) {\n                removeDevice($dev);\n            });\n            markDirty($workspace);\n            $selectedDevices = [];\n            workspaceController.selectionChanged(0);\n        };\n        var editSelectionParameters = function () {\n            if ($selectedDevices.length != 1) {\n                console.error('Only one device must be selected for editing Parameters!');\n            }\n            let deviceController = controller($selectedDevices[0]);\n            deviceController.openParameterDialog();\n        };\n\n        var rotateSelection = function (rotationAngle: number) {\n            let rotationCenter = devicesCenterOfGravity(jQuery.makeArray($selectedDevices));\n\n            for (let $dev of $selectedDevices) {\n                const size = controller($dev)\n                    .getSize();\n\n                const devoffset = offset($dev);\n                let {x, y, rotate} = transform($dev);\n                const centerOffset = {x: devoffset.x - rotationCenter.x, y: devoffset.y - rotationCenter.y};\n\n                let dx = x - centerOffset.x;\n                let dy = y - centerOffset.y;\n\n                const backrot = rotateCoords(centerOffset, -rotate);\n                rotate += rotationAngle;\n                const newpos = rotateCoords(backrot, rotate);\n\n                transform($dev, newpos.x + dx, newpos.y + dy, normalizeAngle(rotate));\n                controller($dev).updatePosition();\n                $dev.trigger(\"deviceRotate\");\n            }\n            ;\n            markDirty($workspace);\n            updateConnectors();\n        };\n\n        var selectedData = function () {\n            return exportPart(jQuery.makeArray($selectedDevices), true);\n        };\n\n\n        var beginMoveDevice = function (event, $target) {\n            var $dev = $target.closest('.simcir-device');\n            var pos = transform($dev);\n            var deviceMoved: boolean = false;\n            if (!controller($dev)\n                    .isSelected()) {\n                deselectAll();\n                addSelected($dev);\n                // to front.\n                $dev.parent()\n                    .append($dev.detach());\n            }\n\n            const p1 = tranformEventCoords(event);\n            var dragPoint = {\n                x: p1.x - pos.x,\n                y: p1.y - pos.y\n            };\n            dragMoveHandler = function (event) {\n                // disable events while dragging.\n                enableEvents($dev, false);\n                var curPos = transform($dev);\n                const p2 = tranformEventCoords(event);\n                var deltaPos = {\n                    x: p2.x - dragPoint.x - curPos.x,\n                    y: p2.y - dragPoint.y - curPos.y\n                };\n                deviceMoved = deviceMoved || deltaPos.y != 0 || deltaPos.x != 0;\n                $.each($selectedDevices, function (i, $dev) {\n                    var curPos = transform($dev);\n                    transform($dev,\n                        curPos.x + deltaPos.x,\n                        curPos.y + deltaPos.y,\n                        curPos.rotate\n                    );\n                    controller($dev)\n                        .updatePosition();\n                });\n                updateConnectors();\n            };\n            dragCompleteHandler = function (event) {\n                var $target = $(event.target);\n                enableEvents($dev, true);\n                $.each($selectedDevices, function (i, $dev) {\n                    if (!isOutsideWorkspace(getEventPos(event))) {\n                        adjustDevice($dev);\n                        controller($dev)\n                            .updatePosition();\n                        updateConnectors();\n                        if (deviceMoved) {\n                            markDirty($dev);\n                        }\n                    }\n                    else {\n                        let $p = $dev.parent();\n                        removeDevice($dev);\n                        markDirty($p);\n                    }\n                });\n            };\n        };\n\n        var beginSelectDevice = function (event, $target) {\n            var intersect = function (rect1, rect2) {\n                return !(\n                    rect1.x > rect2.x + rect2.width ||\n                    rect1.y > rect2.y + rect2.height ||\n                    rect1.x + rect1.width < rect2.x ||\n                    rect1.y + rect1.height < rect2.y);\n            };\n            var pointToRect = function (p1, p2) {\n                return {\n                    x: Math.min(p1.x, p2.x),\n                    y: Math.min(p1.y, p2.y),\n                    width: Math.abs(p1.x - p2.x),\n                    height: Math.abs(p1.y - p2.y)\n                };\n            };\n            deselectAll();\n            var off = $workspace.offset();\n            var pos = offset($devicePane);\n            var p1 = tranformEventCoords(event);\n            dragMoveHandler = function (event) {\n                deselectAll();\n                var p2 = tranformEventCoords(event);\n                var selRect = pointToRect(p1, p2);\n                $devicePane.children('.simcir-device')\n                    .each(function () {\n                        var $dev = $(this);\n                        var devPos = transform($dev);\n                        var devSize = controller($dev)\n                            .getSize();\n                        var devRect = {\n                            x: devPos.x + pos.x,\n                            y: devPos.y + pos.y,\n                            width: devSize.width,\n                            height: devSize.height\n                        };\n                        if (intersect(selRect, devRect)) {\n                            addSelected($dev);\n                        }\n                    });\n                $temporaryPane.children()\n                    .remove();\n                $temporaryPane.append(createSVGElement('rect')\n                    .attr(selRect)\n                    .attr('class', 'simcir-selection-rect'));\n            };\n        };\n\n        var beginPan = function (event) {\n            const pos = transform($containerPane);\n            var dragPoint = {\n                x: event.pageX - pos.x,\n                y: event.pageY - pos.y\n            };\n\n            dragMoveHandler = function (event) {\n                transform($containerPane, event.pageX - dragPoint.x, event.pageY - dragPoint.y, pos.rotate, pos.zoom);\n\n            };\n            dragCompleteHandler = function (event) {\n                const pos = transform($containerPane);\n                const adjustCoord = (k: number) => -Math.floor(pos.x / patternPitch) * patternPitch;\n                //transform($workspaceBackground, adjustCoord(pos.x), adjustCoord(pos.y));\n                //TODO: Fix and reenable backgound movement\n            };\n        };\n\n        var doPanOnDrag = false;\n\n        var mouseDownHandler = function (event) {\n\n            // console.log(\"MouseDown:\",event,event.which);\n            $workspace.parent()\n                .focus();\n            event.preventDefault();\n            event.stopPropagation();\n            var $target = $(event.target);\n            if (isActiveNode($target)) {\n                beginConnect(event, $target);\n            }\n            else if ($target.closest('.simcir-device').length == 1) {\n                beginMoveDevice(event, $target);\n            }\n            else {\n                if (doPanOnDrag || event.which == 3) {\n                    beginPan(event);\n                }\n                else {\n                    beginSelectDevice(event, $target);\n                }\n            }\n            $(document)\n                .on('mousemove', mouseMoveHandler);\n            $(document)\n                .on('mouseup', mouseUpHandler);\n        };\n        var mouseMoveHandler = function (event) {\n           // console.log(\"MouseMove:\",event);\n            if (dragMoveHandler != null) {\n                dragMoveHandler(event);\n            }\n        };\n        var mouseUpHandler = function (event) {\n            // console.log(\"MouseUp:\",event,event.which);\n            if (dragCompleteHandler != null) {\n                dragCompleteHandler(event);\n            }\n            dragMoveHandler = null;\n            dragCompleteHandler = null;\n            $devicePane.children('.simcir-device')\n                .each(function () {\n                    enableEvents($(this), true);\n                });\n            $temporaryPane.children()\n                .remove();\n            $(document)\n                .off('mousemove', mouseMoveHandler);\n            $(document)\n                .off('mouseup', mouseUpHandler);\n            event.stopPropagation();\n            event.preventDefault();\n        };\n        $workspace.on('mousedown', mouseDownHandler);\n        $workspace.on('click', (event) => {\n            // console.log(\"Click:\",event);\n            event.stopPropagation();\n            event.preventDefault();\n            return false;\n        });\n        $workspace.contextmenu((event) => {\n            // console.log(\"onContextMenu:\",event);\n            event.stopPropagation();\n            event.preventDefault();\n            return false;\n        });\n\n        var setDragMode = function (pan: boolean) {\n            doPanOnDrag = pan;\n        };\n\n        var setShowConnectorState = function (showState: boolean) {\n            showConnectorState = showState;\n            updateConnectors();\n            for (let $dev of $devicePane.find('.simcir-device')\n                .toArray()) {\n                controller($($dev))\n                    .setShowConnectorState(showState);\n            }\n            for (let $node of $devicePane.find('.simcir-node')\n                .toArray()) {\n                controller($($node))\n                    .setShowConnectorState(showState);\n            }\n        };\n\n        var zoom = function (relative: boolean, zoomfactor: number, center?: position) {\n            center = tranformCoords(center || {x: $workspace.width() / 2, y: $workspace.height() / 2});\n            const pos = transform($containerPane);\n\n            if (!relative)\n                zoomfactor /= pos.zoom;\n            const oldzoom = pos.zoom;\n            pos.zoom *= zoomfactor;\n\n            //Catch around 100%\n            if (relative && pos.zoom < 1.05 && pos.zoom > 0.95 && oldzoom != 1)\n                pos.zoom = 1;\n\n            //limit zoom\n            if (pos.zoom > 10)\n                pos.zoom = 10;\n            if (pos.zoom < 0.05)\n                pos.zoom = 0.05;\n\n            zoomfactor = pos.zoom/oldzoom;\n            const scalechange = pos.zoom * (1 - 1/zoomfactor);\n            pos.x -= (scalechange) * (center.x);\n            pos.y -= (scalechange) * (center.y);\n            //pos.x += (1-zoomfactor)*(center.x - vieworign.x);\n            //pos.y += (1-zoomfactor)*(center.y - vieworign.y);\n\n            transform($containerPane, pos.x, pos.y, pos.rotate, pos.zoom);\n            workspaceController.zoomChanged(pos.zoom);\n        };\n        $workspace.on('wheel', (event) => {\n            event.preventDefault();\n            zoom(true, 1 - Math.sign((<any>event.originalEvent).deltaY) / 10, getEventPos(event));\n        });\n\n        var createInfoText = function (text: string) {\n            const $container = $('<div></div>');\n            $container.html(text);\n            $container.addClass('beast-parameter-tooltip');\n            const $svgelem = SVGGraphics.createSVGElement('foreignObject');\n            const wswidth = $workspace.width();\n            const width = (wswidth > 500) ? wswidth - 200 : wswidth - 40;\n            const height = 70;\n            $svgelem.attr({x: (wswidth - width) / 2  , y: $workspace.height() - height, width: width, height: height});\n            $svgelem.append($container);\n            $workspace.append($svgelem);\n            return $svgelem;\n        };\n\n\n        var $draggedDevice = null;\n\n        var addMouseMoveHandler = function (event) {\n            if ($draggedDevice !== null) {\n                const pos = tranformEventCoords(event);\n                transform($draggedDevice,\n                    pos.x, pos.y,\n                    transform($draggedDevice).rotate);\n            }\n\n        };\n\n        $container.droppable({\n            activate: function (event, ui) {\n                const sourceNode = $(ui.helper)\n                    .data('ftSourceNode');\n                if (!sourceNode || sourceNode.folder) {\n                    return;\n                }\n                let dev = {type: <GlobalComponentTypeID>sourceNode.data};\n                if (dev.type.libraryID === BeastController.DEPOSIT_LIB_ID)\n                    return;\n\n                $draggedDevice = createDevice(dev, getLibraryComponent, false, scope);\n\n                const pos = tranformEventCoords(event);\n                transform($draggedDevice, pos.x, pos.y, transform($draggedDevice).rotate);\n\n                $temporaryPane.append($draggedDevice);\n                $(document)\n                    .on('mousemove', addMouseMoveHandler);\n\n            },\n            deactivate: function (event, ui) {\n                if ($draggedDevice !== null) {\n                    $draggedDevice.remove();\n                }\n                $draggedDevice = null;\n                $(document)\n                    .off('mousemove', addMouseMoveHandler);\n            },\n            drop: function (event, ui) {\n                if ($draggedDevice !== null) {\n                    const pos = tranformEventCoords(event);\n                    $draggedDevice.detach();\n                    transform($draggedDevice, pos.x, pos.y, transform($draggedDevice).rotate);\n                    adjustDevice($draggedDevice);\n                    addDevice($draggedDevice);\n                    workspaceController.markDirty();\n                    $draggedDevice = null;\n                }\n            }\n        });\n\n        //-------------------------------------------\n        //\n\n        $.each(buildCircuit(data, getLibraryComponent, false, scope), function (i, $dev) {\n            addDevice($dev);\n        });\n        updateConnectors();\n\n        var getPorts = function () {\n            let inports = [];\n            let outports = [];\n\n            for (let $dev of $devicePane.find('.simcir-device')\n                .toArray()) {\n                let dev = controller($($dev));\n                if (dev.deviceDef.type.libraryID == BeastController.BASIC_LIB_ID) {\n                    if (dev.deviceDef.type.componentID == 'Out') {\n                        outports.push(dev);\n                    }\n                    if (dev.deviceDef.type.componentID == 'In') {\n                        inports.push(dev);\n                    }\n                }\n\n            }\n\n            return {inports: inports, outports: outports};\n        };\n\n        var updatePositions = function () {\n            $devicePane.children('.simcir-device').each(function () {\n                controller($(this)).updatePosition();\n            });\n        };\n\n\n        var workspaceController = {\n            data: getData,\n            ui: $workspace,\n            removeSelected: removeSelected,\n            editSelectionParameters: editSelectionParameters,\n            setShowParameterTooltips: setShowParameterTooltips,\n            pasteSubcircuit: pasteSubcircuit,\n            selectedData: selectedData,\n            setDragMode: setDragMode,\n            markDirty: (stateOnly?: boolean) => (null),\n            openCompound: (identifier: any) => (null),\n            selectionChanged: (size: number) => (null),\n            rotateSelection: rotateSelection,\n            setShowConnectorState: setShowConnectorState,\n            zoomChanged: (zoomfactor: number) => (null),\n            zoom,\n            selectAll,\n            getPorts,\n            updateConnectors,\n            updatePositions,\n            eventQueue,\n            setPauseTimers,\n        };\n\n        controller($workspace, workspaceController);\n\n        return workspaceController;\n    };\n\n\n    return {\n        createWorkspace: createWorkspace,\n        createSVGElement: createSVGElement,\n        addClass: addClass,\n        removeClass: removeClass,\n        hasClass: hasClass,\n        offset: offset,\n        transform: transform,\n        enableEvents: enableEvents,\n        graphics: graphics,\n        controller: controller,\n        unit: unit,\n\n    };\n}\n(jQuery);"]}