{"version":3,"file":"Dialog.js","sourceRoot":"","sources":["Dialog.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by maximilian on 12.05.17.\n * Reworked by Dario GÃ¶tze\n */\n\nabstract class Dialog\n{\n    protected buttons : Array<any>;\n    protected keyListener : Array<Function>;\n    protected dialog : JQuery;\n    private _isOpen : boolean;\n    protected options : any;\n    \n    private static overlay : JQuery;\n    private static overlayCount : number = 0;\n    \n    constructor(dialogOptions : any = {})\n        {\n            this.buttons     = [];\n            this.keyListener = [];\n            this.options     = Object.assign({\n                                                 title         : this.getTitle(),\n                                                 modal         : true,\n                                                 show          : true,\n                                                 hide          : false,\n                                                 closeOnEscape : true,\n                                                 draggable     : true,\n                                                 buttons       : this.buttons,\n                                                 width         : 'auto',\n                                                 close         : () => this.close(),\n                                                 //A bit hacky\n                                                 open          : () => $('.ui-button-icon.glyphicon')\n                                                     .removeClass('ui-button-icon ui-icon')\n                                             }, dialogOptions);\n        }\n    \n    /**\n     *\n     * @returns {boolean} true if the dialog is open\n     */\n    get isOpen() : boolean\n        {\n            return this.dialog && this._isOpen;\n        }\n    \n    /**\n     * Opens the dialog\n     */\n    public show()\n        {\n            this.dialog = this.getContent()\n                              .dialog(this.options)\n                              .show();\n            \n            this.dialog.keypress((e) =>\n                                 {\n                                     this.keyListener.forEach((value) =>\n                                                              {\n                                                                  value(e.which);\n                                                              });\n                                 });\n            if (this.options.modal)\n            {\n                Dialog.addOverlay();\n            }\n            this._isOpen = true;\n        }\n    \n    /**\n     * get the title of the dialog\n     */\n    protected abstract getTitle() : string\n    \n    /**\n     * get the content of the dialog\n     */\n    protected abstract getContent() : JQuery\n    \n    /**\n     * Adds a new dialog button\n     * @param text button text\n     * @param icon button icon\n     * @param callback click callback\n     * @param disabled button state\n     */\n    public addButton(text : string, icon : string, callback : () => void, disabled : boolean = false)\n        {\n            if (icon == null)\n            {\n                throw 'Button icon is undefined!';\n            }\n            this.buttons.push({\n                                  text     : text,\n                                  icon     : icon,\n                                  disabled : disabled,\n                                  click    : callback\n                              });\n        }\n    \n    /**\n     * Disable or enable a button\n     * @param button button name\n     * @param disabled true, if disable state\n     */\n    public setButtonDisabled(button : string, disabled : boolean) : void\n        {\n            this.dialog\n                .next('.ui-dialog-buttonpane')\n                .find('button:contains(\"' + button + '\")')\n                .button('option', 'disabled', disabled);\n        }\n    \n    /**\n     * Adds a KeyListener\n     * @param callBack callback with pressed key number\n     */\n    public registerKeyListener(callBack : (key : number) => void)\n        {\n            this.keyListener.push(callBack);\n        }\n    \n    public simulateButtonClick(button : string)\n        {\n            this.dialog.find('button:contains(\"' + button + '\")')\n                .click();\n        }\n    \n    /**\n     * Close the dialog\n     */\n    public close()\n        {\n            if (this.dialog)\n            {\n                if (this.options.modal)\n                {\n                    Dialog.removeOverlay();\n                }\n                this.dialog.dialog('destroy');\n                this._isOpen = false;\n            }\n        }\n    \n    /**\n     * Adds the overlay\n     */\n    private static addOverlay()\n        {\n            Dialog.overlayCount++;\n            if (Dialog.overlayCount == 1)\n            {\n                this.overlay = $('<div class=\"beast-overlay\"></div>')\n                    .appendTo('BODY');\n                this.overlay.show();\n            }\n        }\n    \n    /**\n     * Removes the overlay\n     */\n    private static removeOverlay()\n        {\n            Dialog.overlayCount--;\n            if (Dialog.overlayCount == 0)\n            {\n                this.overlay.remove();\n            }\n        }\n    \n}\n\n\nclass InfoDialog extends Dialog\n{\n    public static showDialog(message : string)\n        {\n            new InfoDialog(message).show();\n        }\n    \n    private message : string;\n    \n    private constructor(message : string)\n        {\n            super({draggable : false});\n            this.message = message;\n        }\n    \n    protected getContent() : JQuery\n        {\n            this.addButton('Ok', 'glyphicon glyphicon-ok', () => this.close());\n            this.registerKeyListener((key : number) =>\n                                     {\n                                         if (key == 13)\n                                         {\n                                             this.simulateButtonClick('Ok');\n                                         }\n                                     });\n            return $('<p id=\"info-dialog\"><b>' + this.message + '</b></p>');\n        }\n    \n    protected getTitle() : string\n        {\n            return 'WARNING!';\n        }\n}\n"]}