{"version":3,"file":"event_queue.js","sourceRoot":"","sources":["event_queue.ts"],"names":[],"mappings":"AAAA;;GAEG;AAGH;IAQI;QANA,UAAK,GAAY,EAAE,CAAC,CAAC,KAAK;QAC1B,UAAK,GAAY,EAAE,CAAC,CAAC,KAAK;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,sBAAiB,GAAG,EAAE,CAAC;QACxB,WAAM,GAAY,KAAK,CAAC;QAI3B,IAAI,CAAC,YAAY,EAAE,CAAA;IACvB,CAAC;IAEM,SAAS,CAAC,KAAK;QAElB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAC3B,CAAC;YACG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAAA,CAAC;IAEK,gBAAgB,CAAC,QAAsB;QAC1C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAEO,aAAa;QAEjB,IAAI,KAAK,GAAK,IAAI,CAAC,SAAS,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EACvB,CAAC;YACG,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YACtB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;IACL,CAAC;IAAA,CAAC;IAEM,OAAO;QAEX,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAAA,CAAC;IAEM,YAAY;QAEhB,IAAI,KAAK,GAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,IAAI,UAAU,GAAG,CAAC,CAAC;YACnB,wDAAwD;YACxD,yFAAyF;YACzF,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,UAAU,GAAG,GAAG,EACjD,CAAC;gBACG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,UAAU,IAAI,CAAC,CAAC;YACpB,CAAC;YAED,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC;gBACpC,EAAE,EAAE,CAAC;YACT,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAChC,CAAC;QAED,MAAM,CAAC,UAAU,CAAC,MAAK,IAAI,CAAC,YAAY,EAAE,EACxB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAAA,CAAC;CAEL","sourcesContent":["/**\n * Created by mseeber on 5/11/17.\n */\n\n\nclass EventQueue\n{\n    delay          = 50; // ms\n    limit          = 40; // ms\n    private nextQueue = null;\n    private lateCallbackQueue = [];\n    public paused: boolean = false;\n    \n    constructor()\n    {\n        this.timerHandler()\n    }\n    \n    public postEvent(event)\n    {\n        if (this.nextQueue == null)\n        {\n            this.nextQueue = [];\n        }\n        this.nextQueue.push(event);\n    };\n\n    public postLateCallback(callback: () => (void)) {\n        this.lateCallbackQueue.push(callback);\n    }\n    \n    private dispatchEvent()\n    {\n        let queue   = this.nextQueue;\n        this.nextQueue = null;\n        while (queue.length > 0)\n        {\n            let e = queue.shift();\n            e.target.trigger(e.type);\n        }\n    };\n    \n    private getTime()\n    {\n        return new Date().getTime();\n    };\n    \n    private timerHandler()\n    {\n        let start      = this.getTime();\n        if (!this.paused) {\n            let iterations = 0;\n            //modified for better debugging: made timing-independant\n            //replaced with a static iterations limit to prevent freezing caused by instable circuits\n            while (this.nextQueue != null && iterations < 100)\n            { //original code:  && getTime() - start < limit\n                this.dispatchEvent();\n                iterations += 1;\n            }\n\n            for (const cb of this.lateCallbackQueue)\n                cb();\n            this.lateCallbackQueue = [];\n        }\n\n        window.setTimeout(() =>this.timerHandler(),\n                          Math.max(this.delay - this.limit, this.delay - (this.getTime() - start)));\n    };\n    \n}\n\n"]}